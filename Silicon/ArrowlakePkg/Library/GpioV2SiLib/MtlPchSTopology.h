/** @file
  This file provides GPIO topology for MTL_PCH_S.

  Copyright (c) 2024, Intel Corporation. All rights reserved.<BR>
  SPDX-License-Identifier: BSD-2-Clause-Patent

**/

#include <Register/GpioV2ChipsetId.h>
#include <Register/GpioV2MtlPchSRegs.h>
#include <GpioV2PinsMtlPchS.h>
#include <GpioV2Config.h>
#include <Library/GpioV2SiLib.h>
#include <Library/BaseLib.h>
#include <Library/BootloaderCommonLib.h>
#include <Library/PciLib.h>

#define PAD_DW_SIZE  0x10

//
// Pads for Community 0, Group GPP_D (0)
//
GPIOV2_PAD MtlPchSPch0Community0Group0Pads[] = {
  GPIOV2_MTL_PCH_S_GPP_D_0,
  GPIOV2_MTL_PCH_S_GPP_D_1,
  GPIOV2_MTL_PCH_S_GPP_D_2,
  GPIOV2_MTL_PCH_S_GPP_D_3,
  GPIOV2_MTL_PCH_S_GPP_D_4,
  GPIOV2_MTL_PCH_S_GPP_D_5,
  GPIOV2_MTL_PCH_S_GPP_D_6,
  GPIOV2_MTL_PCH_S_GPP_D_7,
  GPIOV2_MTL_PCH_S_GPP_D_8,
  GPIOV2_MTL_PCH_S_GPP_D_9,
  GPIOV2_MTL_PCH_S_GPP_D_10,
  GPIOV2_MTL_PCH_S_GPP_D_11,
  GPIOV2_MTL_PCH_S_GPP_D_12,
  GPIOV2_MTL_PCH_S_GPP_D_13,
  GPIOV2_MTL_PCH_S_GPP_D_14,
  GPIOV2_MTL_PCH_S_GPP_D_15,
  GPIOV2_MTL_PCH_S_GPP_D_16,
  GPIOV2_MTL_PCH_S_GPP_D_17,
  GPIOV2_MTL_PCH_S_GPP_D_18,
  GPIOV2_MTL_PCH_S_GPP_D_19,
  GPIOV2_MTL_PCH_S_GPP_D_20,
  GPIOV2_MTL_PCH_S_GPP_D_21,
  GPIOV2_MTL_PCH_S_GPP_D_22,
  GPIOV2_MTL_PCH_S_GPP_D_23
};

//
// Pads for Community 0, Group GPP_R (1)
//
GPIOV2_PAD MtlPchSPch0Community0Group1Pads[] = {
  GPIOV2_MTL_PCH_S_GPP_R_0,
  GPIOV2_MTL_PCH_S_GPP_R_1,
  GPIOV2_MTL_PCH_S_GPP_R_2,
  GPIOV2_MTL_PCH_S_GPP_R_3,
  GPIOV2_MTL_PCH_S_GPP_R_4,
  GPIOV2_MTL_PCH_S_GPP_R_5,
  GPIOV2_MTL_PCH_S_GPP_R_6,
  GPIOV2_MTL_PCH_S_GPP_R_7,
  GPIOV2_MTL_PCH_S_GPP_R_8,
  GPIOV2_MTL_PCH_S_GPP_R_9,
  GPIOV2_MTL_PCH_S_GPP_R_10,
  GPIOV2_MTL_PCH_S_GPP_R_11,
  GPIOV2_MTL_PCH_S_GPP_R_12
};

//
// Pads for Community 0, Group GPP_J (2)
//
GPIOV2_PAD MtlPchSPch0Community0Group2Pads[] = {
  GPIOV2_MTL_PCH_S_GPP_J_0,
  GPIOV2_MTL_PCH_S_GPP_J_1,
  GPIOV2_MTL_PCH_S_GPP_J_2,
  GPIOV2_MTL_PCH_S_GPP_J_3,
  GPIOV2_MTL_PCH_S_GPP_J_4,
  GPIOV2_MTL_PCH_S_GPP_J_5,
  GPIOV2_MTL_PCH_S_GPP_J_6,
  GPIOV2_MTL_PCH_S_GPP_J_7,
  GPIOV2_MTL_PCH_S_GPP_J_8,
  GPIOV2_MTL_PCH_S_GPP_J_9,
  GPIOV2_MTL_PCH_S_GPP_J_10,
  GPIOV2_MTL_PCH_S_GPP_J_11,
  GPIOV2_MTL_PCH_S_GPP_J_12,
  GPIOV2_MTL_PCH_S_GPP_J_13,
  GPIOV2_MTL_PCH_S_GPP_J_14,
  GPIOV2_MTL_PCH_S_GPP_J_15,
  GPIOV2_MTL_PCH_S_GPP_J_16
};

//
// Groups for Community 0
//
GPIOV2_GROUP MtlPchSPch0Community0Groups[] = {
  {
    // Group: GPP_D
    .Name              = "GPP_D",
    .GpioPadGroup      = GPIOV2_MTL_PCH_S_GROUP_D,
    .GroupToGpeMapping = { V_GPIOV2_MTL_PCH_S_PMC_PWRM_GPIO_CFG_GPP_D, V_GPIOV2_MTL_PCH_S_PCR_MISCCFG_GPE0_GPP_D },
    .RegisterOffsets   = { R_GPIOV2_MTL_PCH_S_PCR_GPP_D_PAD_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_D_PADCFGLOCK, R_GPIOV2_MTL_PCH_S_PCR_GPP_D_PADCFGLOCKTX, R_GPIOV2_MTL_PCH_S_PCR_GPP_D_HOSTSW_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_D_GPI_IS, R_GPIOV2_MTL_PCH_S_PCR_GPP_D_GPI_IE, R_GPIOV2_MTL_PCH_S_PCR_GPP_D_GPI_GPE_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_D_GPI_GPE_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_D_SMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_D_SMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_D_NMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_D_NMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_D_PAD_CFG_DW0 },
    .PadsNum           = sizeof (MtlPchSPch0Community0Group0Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlPchSPch0Community0Group0Pads,
    .PadDwSize         = PAD_DW_SIZE
  },
  {
    // Group: GPP_R
    .Name              = "GPP_R",
    .GpioPadGroup      = GPIOV2_MTL_PCH_S_GROUP_R,
    .GroupToGpeMapping = { V_GPIOV2_MTL_PCH_S_PMC_PWRM_GPIO_CFG_GPP_R, V_GPIOV2_MTL_PCH_S_PCR_MISCCFG_GPE0_GPP_R },
    .RegisterOffsets   = { R_GPIOV2_MTL_PCH_S_PCR_GPP_R_PAD_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_R_PADCFGLOCK, R_GPIOV2_MTL_PCH_S_PCR_GPP_R_PADCFGLOCKTX, R_GPIOV2_MTL_PCH_S_PCR_GPP_R_HOSTSW_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_R_GPI_IS, R_GPIOV2_MTL_PCH_S_PCR_GPP_R_GPI_IE, R_GPIOV2_MTL_PCH_S_PCR_GPP_R_GPI_GPE_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_R_GPI_GPE_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_R_SMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_R_SMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_R_NMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_R_NMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_R_PAD_CFG_DW0 },
    .PadsNum           = sizeof (MtlPchSPch0Community0Group1Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlPchSPch0Community0Group1Pads,
    .PadDwSize         = PAD_DW_SIZE
  },
  {
    // Group: GPP_J
    .Name              = "GPP_J",
    .GpioPadGroup      = GPIOV2_MTL_PCH_S_GROUP_J,
    .GroupToGpeMapping = { V_GPIOV2_MTL_PCH_S_PMC_PWRM_GPIO_CFG_GPP_J, V_GPIOV2_MTL_PCH_S_PCR_MISCCFG_GPE0_GPP_J },
    .RegisterOffsets   = { R_GPIOV2_MTL_PCH_S_PCR_GPP_J_PAD_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_J_PADCFGLOCK, R_GPIOV2_MTL_PCH_S_PCR_GPP_J_PADCFGLOCKTX, R_GPIOV2_MTL_PCH_S_PCR_GPP_J_HOSTSW_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_J_GPI_IS, R_GPIOV2_MTL_PCH_S_PCR_GPP_J_GPI_IE, R_GPIOV2_MTL_PCH_S_PCR_GPP_J_GPI_GPE_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_J_GPI_GPE_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_J_SMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_J_SMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_J_NMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_J_NMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_J_PAD_CFG_DW0 },
    .PadsNum           = sizeof (MtlPchSPch0Community0Group2Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlPchSPch0Community0Group2Pads,
    .PadDwSize         = PAD_DW_SIZE
  }
};

//
// Pads for Community 1, Group GPP_A (0)
//
GPIOV2_PAD MtlPchSPch0Community1Group0Pads[] = {
  GPIOV2_MTL_PCH_S_GPP_A_0,
  GPIOV2_MTL_PCH_S_GPP_A_1,
  GPIOV2_MTL_PCH_S_GPP_A_2,
  GPIOV2_MTL_PCH_S_GPP_A_3,
  GPIOV2_MTL_PCH_S_GPP_A_4,
  GPIOV2_MTL_PCH_S_GPP_A_5,
  GPIOV2_MTL_PCH_S_GPP_A_6,
  GPIOV2_MTL_PCH_S_GPP_A_7,
  GPIOV2_MTL_PCH_S_GPP_A_8,
  GPIOV2_MTL_PCH_S_GPP_A_9,
  GPIOV2_MTL_PCH_S_GPP_A_10,
  GPIOV2_MTL_PCH_S_GPP_A_11,
  GPIOV2_MTL_PCH_S_GPP_A_12,
  GPIOV2_MTL_PCH_S_GPP_A_13
};


//
// Pads for Community 1, Group GPP_B (1)
//
GPIOV2_PAD MtlPchSPch0Community1Group2Pads[] = {
  GPIOV2_MTL_PCH_S_GPP_B_0,
  GPIOV2_MTL_PCH_S_GPP_B_1,
  GPIOV2_MTL_PCH_S_GPP_B_2,
  GPIOV2_MTL_PCH_S_GPP_B_3,
  GPIOV2_MTL_PCH_S_GPP_B_4,
  GPIOV2_MTL_PCH_S_GPP_B_5,
  GPIOV2_MTL_PCH_S_GPP_B_6,
  GPIOV2_MTL_PCH_S_GPP_B_7,
  GPIOV2_MTL_PCH_S_GPP_B_8,
  GPIOV2_MTL_PCH_S_GPP_B_9,
  GPIOV2_MTL_PCH_S_GPP_B_10,
  GPIOV2_MTL_PCH_S_GPP_B_11,
  GPIOV2_MTL_PCH_S_GPP_B_12,
  GPIOV2_MTL_PCH_S_GPP_B_13,
  GPIOV2_MTL_PCH_S_GPP_B_14,
  GPIOV2_MTL_PCH_S_GPP_B_15,
  GPIOV2_MTL_PCH_S_GPP_B_16,
  GPIOV2_MTL_PCH_S_GPP_B_17,
  GPIOV2_MTL_PCH_S_GPP_B_18,
  GPIOV2_MTL_PCH_S_GPP_B_19,
  GPIOV2_MTL_PCH_S_GPP_B_20,
  GPIOV2_MTL_PCH_S_GPP_B_21
};

//
// Groups for Community 1
//
GPIOV2_GROUP MtlPchSPch0Community1Groups[] = {
  {
   // Group: GPP_A
    .Name              = "GPP_A",
    .GpioPadGroup      = GPIOV2_MTL_PCH_S_GROUP_A,
    .GroupToGpeMapping = { V_GPIOV2_MTL_PCH_S_PMC_PWRM_GPIO_CFG_GPP_A, V_GPIOV2_MTL_PCH_S_PCR_MISCCFG_GPE0_GPP_A },
    .RegisterOffsets   = { R_GPIOV2_MTL_PCH_S_PCR_GPP_A_PAD_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_A_PADCFGLOCK, R_GPIOV2_MTL_PCH_S_PCR_GPP_A_PADCFGLOCKTX, R_GPIOV2_MTL_PCH_S_PCR_GPP_A_HOSTSW_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_A_GPI_IS, R_GPIOV2_MTL_PCH_S_PCR_GPP_A_GPI_IE, R_GPIOV2_MTL_PCH_S_PCR_GPP_A_GPI_GPE_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_A_GPI_GPE_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_A_SMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_A_SMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_A_NMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_A_NMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_A_PAD_CFG_DW0 },
    .PadsNum           = sizeof (MtlPchSPch0Community1Group0Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlPchSPch0Community1Group0Pads,
    .PadDwSize         = PAD_DW_SIZE
  },
  {
    // Group: GPP_B
    .Name              = "GPP_B",
    .GpioPadGroup      = GPIOV2_MTL_PCH_S_GROUP_B,
    .GroupToGpeMapping = { V_GPIOV2_MTL_PCH_S_PMC_PWRM_GPIO_CFG_GPP_B, V_GPIOV2_MTL_PCH_S_PCR_MISCCFG_GPE0_GPP_B },
    .RegisterOffsets   = { R_GPIOV2_MTL_PCH_S_PCR_GPP_B_PAD_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_B_PADCFGLOCK, R_GPIOV2_MTL_PCH_S_PCR_GPP_B_PADCFGLOCKTX, R_GPIOV2_MTL_PCH_S_PCR_GPP_B_HOSTSW_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_B_GPI_IS, R_GPIOV2_MTL_PCH_S_PCR_GPP_B_GPI_IE, R_GPIOV2_MTL_PCH_S_PCR_GPP_B_GPI_GPE_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_B_GPI_GPE_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_B_SMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_B_SMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_B_NMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_B_NMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_B_PAD_CFG_DW0 },
    .PadsNum           = sizeof (MtlPchSPch0Community1Group2Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlPchSPch0Community1Group2Pads,
    .PadDwSize         = PAD_DW_SIZE
  }
};

//
// Pads for Community 2, Group DSW (0)
//
GPIOV2_PAD MtlPchSPch0Community2Group0Pads[] = {
  GPIOV2_MTL_PCH_S_GPD_0,
  GPIOV2_MTL_PCH_S_GPD_1,
  GPIOV2_MTL_PCH_S_GPD_2,
  GPIOV2_MTL_PCH_S_GPD_3,
  GPIOV2_MTL_PCH_S_GPD_4,
  GPIOV2_MTL_PCH_S_GPD_5,
  GPIOV2_MTL_PCH_S_GPD_6,
  GPIOV2_MTL_PCH_S_GPD_7,
  GPIOV2_MTL_PCH_S_GPD_8,
  GPIOV2_MTL_PCH_S_GPD_9,
  GPIOV2_MTL_PCH_S_GPD_10,
  GPIOV2_MTL_PCH_S_GPD_11,
  GPIOV2_MTL_PCH_S_GPD_12
};

//
// Groups for Community 2
//
GPIOV2_GROUP MtlPchSPch0Community2Groups[] = {
  {
    // Group: DSW
    .Name              = "DSW",
    .GpioPadGroup      = GPIOV2_MTL_PCH_S_GROUP_DSW,
    .GroupToGpeMapping = { V_GPIOV2_MTL_PCH_S_PMC_PWRM_GPIO_CFG_DSW, V_GPIOV2_MTL_PCH_S_PCR_MISCCFG_GPE0_DSW },
    .RegisterOffsets   = { R_GPIOV2_MTL_PCH_S_PCR_DSW_PAD_OWN, R_GPIOV2_MTL_PCH_S_PCR_DSW_PADCFGLOCK, R_GPIOV2_MTL_PCH_S_PCR_DSW_PADCFGLOCKTX, R_GPIOV2_MTL_PCH_S_PCR_DSW_HOSTSW_OWN, R_GPIOV2_MTL_PCH_S_PCR_DSW_GPI_IS, R_GPIOV2_MTL_PCH_S_PCR_DSW_GPI_IE, R_GPIOV2_MTL_PCH_S_PCR_DSW_GPI_GPE_STS, R_GPIOV2_MTL_PCH_S_PCR_DSW_GPI_GPE_EN, R_GPIOV2_MTL_PCH_S_PCR_DSW_SMI_STS, R_GPIOV2_MTL_PCH_S_PCR_DSW_SMI_EN, R_GPIOV2_MTL_PCH_S_PCR_DSW_NMI_STS, R_GPIOV2_MTL_PCH_S_PCR_DSW_NMI_EN, R_GPIOV2_MTL_PCH_S_PCR_DSW_PAD_CFG_DW0 },
    .PadsNum           = sizeof (MtlPchSPch0Community2Group0Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlPchSPch0Community2Group0Pads,
    .PadDwSize         = PAD_DW_SIZE
  }
};


//
// Pads for Community 3, Group GPP_C (0)
//
GPIOV2_PAD MtlPchSPch0Community3Group1Pads[] = {
  GPIOV2_MTL_PCH_S_GPP_C_0,
  GPIOV2_MTL_PCH_S_GPP_C_1,
  GPIOV2_MTL_PCH_S_GPP_C_2,
  GPIOV2_MTL_PCH_S_GPP_C_3,
  GPIOV2_MTL_PCH_S_GPP_C_4,
  GPIOV2_MTL_PCH_S_GPP_C_5,
  GPIOV2_MTL_PCH_S_GPP_C_6,
  GPIOV2_MTL_PCH_S_GPP_C_7,
  GPIOV2_MTL_PCH_S_GPP_C_8,
  GPIOV2_MTL_PCH_S_GPP_C_9,
  GPIOV2_MTL_PCH_S_GPP_C_10,
  GPIOV2_MTL_PCH_S_GPP_C_11,
  GPIOV2_MTL_PCH_S_GPP_C_12,
  GPIOV2_MTL_PCH_S_GPP_C_13,
  GPIOV2_MTL_PCH_S_GPP_C_14,
  GPIOV2_MTL_PCH_S_GPP_C_15,
  GPIOV2_MTL_PCH_S_GPP_C_16,
  GPIOV2_MTL_PCH_S_GPP_C_17,
  GPIOV2_MTL_PCH_S_GPP_C_18,
  GPIOV2_MTL_PCH_S_GPP_C_19,
  GPIOV2_MTL_PCH_S_GPP_C_20,
  GPIOV2_MTL_PCH_S_GPP_C_21,
  GPIOV2_MTL_PCH_S_GPP_C_22,
  GPIOV2_MTL_PCH_S_GPP_C_23
};

//
// Pads for Community 3, Group GPP_H (1)
//
GPIOV2_PAD MtlPchSPch0Community3Group2Pads[] = {
  GPIOV2_MTL_PCH_S_GPP_H_0,
  GPIOV2_MTL_PCH_S_GPP_H_1,
  GPIOV2_MTL_PCH_S_GPP_H_2,
  GPIOV2_MTL_PCH_S_GPP_H_3,
  GPIOV2_MTL_PCH_S_GPP_H_4,
  GPIOV2_MTL_PCH_S_GPP_H_5,
  GPIOV2_MTL_PCH_S_GPP_H_6,
  GPIOV2_MTL_PCH_S_GPP_H_7,
  GPIOV2_MTL_PCH_S_GPP_H_8,
  GPIOV2_MTL_PCH_S_GPP_H_9,
  GPIOV2_MTL_PCH_S_GPP_H_10,
  GPIOV2_MTL_PCH_S_GPP_H_11,
  GPIOV2_MTL_PCH_S_GPP_H_12,
  GPIOV2_MTL_PCH_S_GPP_H_13,
  GPIOV2_MTL_PCH_S_GPP_H_14,
  GPIOV2_MTL_PCH_S_GPP_H_15,
  GPIOV2_MTL_PCH_S_GPP_H_16,
  GPIOV2_MTL_PCH_S_GPP_H_17,
  GPIOV2_MTL_PCH_S_GPP_H_18,
  GPIOV2_MTL_PCH_S_GPP_H_19
};


//
// Groups for Community 3
//
GPIOV2_GROUP MtlPchSPch0Community3Groups[] = {
  {
    // Group: GPP_C
    .Name              = "GPP_C",
    .GpioPadGroup      = GPIOV2_MTL_PCH_S_GROUP_C,
    .GroupToGpeMapping = { V_GPIOV2_MTL_PCH_S_PMC_PWRM_GPIO_CFG_GPP_C, V_GPIOV2_MTL_PCH_S_PCR_MISCCFG_GPE0_GPP_C },
    .RegisterOffsets   = { R_GPIOV2_MTL_PCH_S_PCR_GPP_C_PAD_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_C_PADCFGLOCK, R_GPIOV2_MTL_PCH_S_PCR_GPP_C_PADCFGLOCKTX, R_GPIOV2_MTL_PCH_S_PCR_GPP_C_HOSTSW_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_C_GPI_IS, R_GPIOV2_MTL_PCH_S_PCR_GPP_C_GPI_IE, R_GPIOV2_MTL_PCH_S_PCR_GPP_C_GPI_GPE_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_C_GPI_GPE_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_C_SMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_C_SMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_C_NMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_C_NMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_C_PAD_CFG_DW0 },
    .PadsNum           = sizeof (MtlPchSPch0Community3Group1Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlPchSPch0Community3Group1Pads,
    .PadDwSize         = PAD_DW_SIZE
  },
  {
    // Group: GPP_H
    .Name              = "GPP_H",
    .GpioPadGroup      = GPIOV2_MTL_PCH_S_GROUP_H,
    .GroupToGpeMapping = { V_GPIOV2_MTL_PCH_S_PMC_PWRM_GPIO_CFG_GPP_H, V_GPIOV2_MTL_PCH_S_PCR_MISCCFG_GPE0_GPP_H },
    .RegisterOffsets   = { R_GPIOV2_MTL_PCH_S_PCR_GPP_H_PAD_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_H_PADCFGLOCK, R_GPIOV2_MTL_PCH_S_PCR_GPP_H_PADCFGLOCKTX, R_GPIOV2_MTL_PCH_S_PCR_GPP_H_HOSTSW_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_H_GPI_IS, R_GPIOV2_MTL_PCH_S_PCR_GPP_H_GPI_IE, R_GPIOV2_MTL_PCH_S_PCR_GPP_H_GPI_GPE_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_H_GPI_GPE_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_H_SMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_H_SMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_H_NMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_H_NMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_H_PAD_CFG_DW0 },
    .PadsNum           = sizeof (MtlPchSPch0Community3Group2Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlPchSPch0Community3Group2Pads,
    .PadDwSize         = PAD_DW_SIZE
  }
};

//
// Pads for Community 4, Group GPP_S (0)
//
GPIOV2_PAD MtlPchSPch0Community4Group0Pads[] = {
  GPIOV2_MTL_PCH_S_GPP_S_0,
  GPIOV2_MTL_PCH_S_GPP_S_1,
  GPIOV2_MTL_PCH_S_GPP_S_2,
  GPIOV2_MTL_PCH_S_GPP_S_3,
  GPIOV2_MTL_PCH_S_GPP_S_4,
  GPIOV2_MTL_PCH_S_GPP_S_5,
  GPIOV2_MTL_PCH_S_GPP_S_6,
  GPIOV2_MTL_PCH_S_GPP_S_7
};

//
// Pads for Community 4, Group GPP_E (1)
//
GPIOV2_PAD MtlPchSPch0Community4Group1Pads[] = {
  GPIOV2_MTL_PCH_S_GPP_E_0,
  GPIOV2_MTL_PCH_S_GPP_E_1,
  GPIOV2_MTL_PCH_S_GPP_E_2,
  GPIOV2_MTL_PCH_S_GPP_E_3,
  GPIOV2_MTL_PCH_S_GPP_E_4,
  GPIOV2_MTL_PCH_S_GPP_E_5,
  GPIOV2_MTL_PCH_S_GPP_E_6,
  GPIOV2_MTL_PCH_S_GPP_E_7,
  GPIOV2_MTL_PCH_S_GPP_E_8,
  GPIOV2_MTL_PCH_S_GPP_E_9,
  GPIOV2_MTL_PCH_S_GPP_E_10,
  GPIOV2_MTL_PCH_S_GPP_E_11,
  GPIOV2_MTL_PCH_S_GPP_E_12,
  GPIOV2_MTL_PCH_S_GPP_E_13,
  GPIOV2_MTL_PCH_S_GPP_E_14,
  GPIOV2_MTL_PCH_S_GPP_E_15,
  GPIOV2_MTL_PCH_S_GPP_E_16,
  GPIOV2_MTL_PCH_S_GPP_E_17,
  GPIOV2_MTL_PCH_S_GPP_E_18,
  GPIOV2_MTL_PCH_S_GPP_E_19,
  GPIOV2_MTL_PCH_S_GPP_E_20,
  GPIOV2_MTL_PCH_S_GPP_E_21
};

//
// Pads for Community 4, Group GPP_K (2)
//
GPIOV2_PAD MtlPchSPch0Community4Group2Pads[] = {
  GPIOV2_MTL_PCH_S_GPP_K_0,
  GPIOV2_MTL_PCH_S_GPP_K_1,
  GPIOV2_MTL_PCH_S_GPP_K_2,
  GPIOV2_MTL_PCH_S_GPP_K_3,
  GPIOV2_MTL_PCH_S_GPP_K_4,
  GPIOV2_MTL_PCH_S_GPP_K_5,
  GPIOV2_MTL_PCH_S_GPP_K_6,
  GPIOV2_MTL_PCH_S_GPP_K_7,
  GPIOV2_MTL_PCH_S_GPP_K_8,
  GPIOV2_MTL_PCH_S_GPP_K_9,
  GPIOV2_MTL_PCH_S_GPP_K_10
};

//
// Pads for Community 4, Group GPP_F (3)
//
GPIOV2_PAD MtlPchSPch0Community4Group3Pads[] = {
  GPIOV2_MTL_PCH_S_GPP_F_0,
  GPIOV2_MTL_PCH_S_GPP_F_1,
  GPIOV2_MTL_PCH_S_GPP_F_2,
  GPIOV2_MTL_PCH_S_GPP_F_3,
  GPIOV2_MTL_PCH_S_GPP_F_4,
  GPIOV2_MTL_PCH_S_GPP_F_5,
  GPIOV2_MTL_PCH_S_GPP_F_6,
  GPIOV2_MTL_PCH_S_GPP_F_7,
  GPIOV2_MTL_PCH_S_GPP_F_8,
  GPIOV2_MTL_PCH_S_GPP_F_9,
  GPIOV2_MTL_PCH_S_GPP_F_10,
  GPIOV2_MTL_PCH_S_GPP_F_11,
  GPIOV2_MTL_PCH_S_GPP_F_12,
  GPIOV2_MTL_PCH_S_GPP_F_13,
  GPIOV2_MTL_PCH_S_GPP_F_14,
  GPIOV2_MTL_PCH_S_GPP_F_15,
  GPIOV2_MTL_PCH_S_GPP_F_16,
  GPIOV2_MTL_PCH_S_GPP_F_17,
  GPIOV2_MTL_PCH_S_GPP_F_18,
  GPIOV2_MTL_PCH_S_GPP_F_19,
  GPIOV2_MTL_PCH_S_GPP_F_20,
  GPIOV2_MTL_PCH_S_GPP_F_21,
  GPIOV2_MTL_PCH_S_GPP_F_22,
  GPIOV2_MTL_PCH_S_GPP_F_23
};

//
// Groups for Community 4
//
GPIOV2_GROUP MtlPchSPch0Community4Groups[] = {
  {
    // Group: GPP_S
    .Name              = "GPP_S",
    .GpioPadGroup      = GPIOV2_MTL_PCH_S_GROUP_S,
    .GroupToGpeMapping = { V_GPIOV2_MTL_PCH_S_PMC_PWRM_GPIO_CFG_GPP_S, V_GPIOV2_MTL_PCH_S_PCR_MISCCFG_GPE0_GPP_S },
    .RegisterOffsets   = { R_GPIOV2_MTL_PCH_S_PCR_GPP_S_PAD_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_S_PADCFGLOCK, R_GPIOV2_MTL_PCH_S_PCR_GPP_S_PADCFGLOCKTX, R_GPIOV2_MTL_PCH_S_PCR_GPP_S_HOSTSW_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_S_GPI_IS, R_GPIOV2_MTL_PCH_S_PCR_GPP_S_GPI_IE, R_GPIOV2_MTL_PCH_S_PCR_GPP_S_GPI_GPE_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_S_GPI_GPE_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_S_SMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_S_SMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_S_NMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_S_NMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_S_PAD_CFG_DW0 },
    .PadsNum           = sizeof (MtlPchSPch0Community4Group0Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlPchSPch0Community4Group0Pads,
    .PadDwSize         = PAD_DW_SIZE
  },
  {
    // Group: GPP_E
    .Name              = "GPP_E",
    .GpioPadGroup      = GPIOV2_MTL_PCH_S_GROUP_E,
    .GroupToGpeMapping = { V_GPIOV2_MTL_PCH_S_PMC_PWRM_GPIO_CFG_GPP_E, V_GPIOV2_MTL_PCH_S_PCR_MISCCFG_GPE0_GPP_E },
    .RegisterOffsets   = { R_GPIOV2_MTL_PCH_S_PCR_GPP_E_PAD_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_E_PADCFGLOCK, R_GPIOV2_MTL_PCH_S_PCR_GPP_E_PADCFGLOCKTX, R_GPIOV2_MTL_PCH_S_PCR_GPP_E_HOSTSW_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_E_GPI_IS, R_GPIOV2_MTL_PCH_S_PCR_GPP_E_GPI_IE, R_GPIOV2_MTL_PCH_S_PCR_GPP_E_GPI_GPE_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_E_GPI_GPE_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_E_SMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_E_SMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_E_NMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_E_NMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_E_PAD_CFG_DW0 },
    .PadsNum           = sizeof (MtlPchSPch0Community4Group1Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlPchSPch0Community4Group1Pads,
    .PadDwSize         = PAD_DW_SIZE
  },
  {
    // Group: GPP_K
    .Name              = "GPP_K",
    .GpioPadGroup      = GPIOV2_MTL_PCH_S_GROUP_K,
    .GroupToGpeMapping = { V_GPIOV2_MTL_PCH_S_PMC_PWRM_GPIO_CFG_GPP_K, V_GPIOV2_MTL_PCH_S_PCR_MISCCFG_GPE0_GPP_K },
    .RegisterOffsets   = { R_GPIOV2_MTL_PCH_S_PCR_GPP_K_PAD_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_K_PADCFGLOCK, R_GPIOV2_MTL_PCH_S_PCR_GPP_K_PADCFGLOCKTX, R_GPIOV2_MTL_PCH_S_PCR_GPP_K_HOSTSW_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_K_GPI_IS, R_GPIOV2_MTL_PCH_S_PCR_GPP_K_GPI_IE, R_GPIOV2_MTL_PCH_S_PCR_GPP_K_GPI_GPE_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_K_GPI_GPE_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_K_SMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_K_SMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_K_NMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_K_NMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_K_PAD_CFG_DW0 },
    .PadsNum           = sizeof (MtlPchSPch0Community4Group2Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlPchSPch0Community4Group2Pads,
    .PadDwSize         = PAD_DW_SIZE
  },
  {
    // Group: GPP_F
    .Name              = "GPP_F",
    .GpioPadGroup      = GPIOV2_MTL_PCH_S_GROUP_F,
    .GroupToGpeMapping = { V_GPIOV2_MTL_PCH_S_PMC_PWRM_GPIO_CFG_GPP_F, V_GPIOV2_MTL_PCH_S_PCR_MISCCFG_GPE0_GPP_F },
    .RegisterOffsets   = { R_GPIOV2_MTL_PCH_S_PCR_GPP_F_PAD_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_F_PADCFGLOCK, R_GPIOV2_MTL_PCH_S_PCR_GPP_F_PADCFGLOCKTX, R_GPIOV2_MTL_PCH_S_PCR_GPP_F_HOSTSW_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_F_GPI_IS, R_GPIOV2_MTL_PCH_S_PCR_GPP_F_GPI_IE, R_GPIOV2_MTL_PCH_S_PCR_GPP_F_GPI_GPE_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_F_GPI_GPE_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_F_SMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_F_SMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_F_NMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_F_NMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_F_PAD_CFG_DW0 },
    .PadsNum           = sizeof (MtlPchSPch0Community4Group3Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlPchSPch0Community4Group3Pads,
    .PadDwSize         = PAD_DW_SIZE
  }
};

//
// Pads for Community 5, Group GPP_I (0)
//
GPIOV2_PAD MtlPchSPch0Community5Group0Pads[] = {
  GPIOV2_MTL_PCH_S_GPP_I_0,
  GPIOV2_MTL_PCH_S_GPP_I_1,
  GPIOV2_MTL_PCH_S_GPP_I_2,
  GPIOV2_MTL_PCH_S_GPP_I_3,
  GPIOV2_MTL_PCH_S_GPP_I_4,
  GPIOV2_MTL_PCH_S_GPP_I_5,
  GPIOV2_MTL_PCH_S_GPP_I_6,
  GPIOV2_MTL_PCH_S_GPP_I_7,
  GPIOV2_MTL_PCH_S_GPP_I_8,
  GPIOV2_MTL_PCH_S_GPP_I_9,
  GPIOV2_MTL_PCH_S_GPP_I_10,
  GPIOV2_MTL_PCH_S_GPP_I_11,
  GPIOV2_MTL_PCH_S_GPP_I_12,
  GPIOV2_MTL_PCH_S_GPP_I_13,
  GPIOV2_MTL_PCH_S_GPP_I_14,
  GPIOV2_MTL_PCH_S_GPP_I_15,
  GPIOV2_MTL_PCH_S_GPP_I_16
};


//
// Groups for Community 5
//
GPIOV2_GROUP MtlPchSPch0Community5Groups[] = {
  {
    // Group: GPP_I
    .Name              = "GPP_I",
    .GpioPadGroup      = GPIOV2_MTL_PCH_S_GROUP_I,
    .GroupToGpeMapping = { V_GPIOV2_MTL_PCH_S_PMC_PWRM_GPIO_CFG_GPP_I, V_GPIOV2_MTL_PCH_S_PCR_MISCCFG_GPE0_GPP_I },
    .RegisterOffsets   = { R_GPIOV2_MTL_PCH_S_PCR_GPP_I_PAD_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_I_PADCFGLOCK, R_GPIOV2_MTL_PCH_S_PCR_GPP_I_PADCFGLOCKTX, R_GPIOV2_MTL_PCH_S_PCR_GPP_I_HOSTSW_OWN, R_GPIOV2_MTL_PCH_S_PCR_GPP_I_GPI_IS, R_GPIOV2_MTL_PCH_S_PCR_GPP_I_GPI_IE, R_GPIOV2_MTL_PCH_S_PCR_GPP_I_GPI_GPE_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_I_GPI_GPE_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_I_SMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_I_SMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_I_NMI_STS, R_GPIOV2_MTL_PCH_S_PCR_GPP_I_NMI_EN, R_GPIOV2_MTL_PCH_S_PCR_GPP_I_PAD_CFG_DW0 },
    .PadsNum           = sizeof (MtlPchSPch0Community5Group0Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlPchSPch0Community5Group0Pads,
    .PadDwSize         = PAD_DW_SIZE
  }
};

//
// Communities structure
//
GPIOV2_COMMUNITY MtlPchSCommunities[] = {
  {
    // Community 0 groups info
    .RegisterOffsets = { R_GPIOV2_MTL_PCH_S_PCR_MISCCFG },
    .GroupsNum       = sizeof (MtlPchSPch0Community0Groups) / sizeof (GPIOV2_GROUP),
    .Groups          = MtlPchSPch0Community0Groups,
    .Pid             = 0x6E,
  },
  {
    // Community 1 groups info
    .RegisterOffsets = { R_GPIOV2_MTL_PCH_S_PCR_MISCCFG },
    .GroupsNum       = sizeof (MtlPchSPch0Community1Groups) / sizeof (GPIOV2_GROUP),
    .Groups          = MtlPchSPch0Community1Groups,
    .Pid             = 0x6D,
  },
  {
    // Community 2 groups info
    .RegisterOffsets = { R_GPIOV2_MTL_PCH_S_PCR_MISCCFG },
    .GroupsNum       = sizeof (MtlPchSPch0Community2Groups) / sizeof (GPIOV2_GROUP),
    .Groups          = MtlPchSPch0Community2Groups,
    .Pid             = 0x6C,
    //.IsComDsw = TRUE
  },
  {
    // Community 3 groups info
    .RegisterOffsets = { R_GPIOV2_MTL_PCH_S_PCR_MISCCFG },
    .GroupsNum       = sizeof (MtlPchSPch0Community3Groups) / sizeof (GPIOV2_GROUP),
    .Groups          = MtlPchSPch0Community3Groups,
    .Pid             = 0x6B,
  },
  {
    // Community 4 groups info
    .RegisterOffsets = { R_GPIOV2_MTL_PCH_S_PCR_MISCCFG },
    .GroupsNum       = sizeof (MtlPchSPch0Community4Groups) / sizeof (GPIOV2_GROUP),
    .Groups          = MtlPchSPch0Community4Groups,
    .Pid             = 0x6A,
  },
  {
    // Community 5 groups info
    .RegisterOffsets = { R_GPIOV2_MTL_PCH_S_PCR_MISCCFG },
    .GroupsNum       = sizeof (MtlPchSPch0Community5Groups) / sizeof (GPIOV2_GROUP),
    .Groups          = MtlPchSPch0Community5Groups,
    .Pid             = 0x69,
  }
};

