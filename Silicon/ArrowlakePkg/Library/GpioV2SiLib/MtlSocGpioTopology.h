/** @file
  This file provides GPIO topology for ARL SOC.

  Copyright (c) 2024, Intel Corporation. All rights reserved.<BR>
  SPDX-License-Identifier: BSD-2-Clause-Patent

@par Specification Reference:
**/

#include <Register/GpioV2ChipsetId.h>
#include <GpioV2PinsMtlSoc.h>
#include <Register/GpioRegsVer6.h>
#include <Register/PmcRegsVer6.h>
#include <GpioV2Config.h>
#include <Library/GpioV2SiLib.h>
#include <Library/BaseLib.h>
#include <Library/BootloaderCommonLib.h>
#include <Library/PciLib.h>

#define PAD_DW_SIZE  0x10

//*********************************************************************
//                    MTL-SOC-M Pins Start                            *
//*********************************************************************

GPIOV2_PAD MtlSocMCommunity0Group1Pads[] = {
  GPIOV2_MTL_SOC_M_GPP_V0,
  GPIOV2_MTL_SOC_M_GPP_V1,
  GPIOV2_MTL_SOC_M_GPP_V2,
  GPIOV2_MTL_SOC_M_GPP_V3,
  GPIOV2_MTL_SOC_M_GPP_V4,
  GPIOV2_MTL_SOC_M_GPP_V5,
  GPIOV2_MTL_SOC_M_GPP_V6,
  GPIOV2_MTL_SOC_M_GPP_V7,
  GPIOV2_MTL_SOC_M_GPP_V8,
  GPIOV2_MTL_SOC_M_GPP_V9,
  GPIOV2_MTL_SOC_M_GPP_V10,
  GPIOV2_MTL_SOC_M_GPP_V11,
  GPIOV2_MTL_SOC_M_GPP_V12,
  GPIOV2_MTL_SOC_M_GPP_V13,
  GPIOV2_MTL_SOC_M_GPP_V14,
  GPIOV2_MTL_SOC_M_GPP_V15,
  GPIOV2_MTL_SOC_M_GPP_V16,
  GPIOV2_MTL_SOC_M_GPP_V17,
  GPIOV2_MTL_SOC_M_GPP_V18,
  GPIOV2_MTL_SOC_M_GPP_V19,
  GPIOV2_MTL_SOC_M_GPP_V20,
  GPIOV2_MTL_SOC_M_GPP_V21,
  GPIOV2_MTL_SOC_M_GPP_V22,
  GPIOV2_MTL_SOC_M_GPP_V23
};

GPIOV2_PAD MtlSocMCommunity0Group2Pads[] = {
  GPIOV2_MTL_SOC_M_GPP_C0,
  GPIOV2_MTL_SOC_M_GPP_C1,
  GPIOV2_MTL_SOC_M_GPP_C2,
  GPIOV2_MTL_SOC_M_GPP_C3,
  GPIOV2_MTL_SOC_M_GPP_C4,
  GPIOV2_MTL_SOC_M_GPP_C5,
  GPIOV2_MTL_SOC_M_GPP_C6,
  GPIOV2_MTL_SOC_M_GPP_C7,
  GPIOV2_MTL_SOC_M_GPP_C8,
  GPIOV2_MTL_SOC_M_GPP_C9,
  GPIOV2_MTL_SOC_M_GPP_C10,
  GPIOV2_MTL_SOC_M_GPP_C11,
  GPIOV2_MTL_SOC_M_GPP_C12,
  GPIOV2_MTL_SOC_M_GPP_C13,
  GPIOV2_MTL_SOC_M_GPP_C14,
  GPIOV2_MTL_SOC_M_GPP_C15,
  GPIOV2_MTL_SOC_M_GPP_C16,
  GPIOV2_MTL_SOC_M_GPP_C17,
  GPIOV2_MTL_SOC_M_GPP_C18,
  GPIOV2_MTL_SOC_M_GPP_C19,
  GPIOV2_MTL_SOC_M_GPP_C20,
  GPIOV2_MTL_SOC_M_GPP_C21,
  GPIOV2_MTL_SOC_M_GPP_C22,
  GPIOV2_MTL_SOC_M_GPP_C23
};

// Mtl Soc M Com 0
GPIOV2_GROUP MtlSocMCommunity0Groups[] = {
  {
    .Name              = "GPP_V",
    .GpioPadGroup      = GPIOV2_MTL_SOC_M_GROUP_V,
    .GroupToGpeMapping = { V_MTL_SOC_M_PMC_PWRM_GPIO_CFG_GPP_V, V_GPIO_VER6_SOC_M_GPIO_PCR_MISCCFG_GPE0_GPP_V },
    .RegisterOffsets   = { R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_V_PAD_OWN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_V_PADCFGLOCK, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_V_PADCFGLOCKTX, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_V_HOSTSW_OWN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_V_GPI_IS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_V_GPI_IE, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_V_GPI_GPE_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_V_GPI_GPE_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_V_I_SMI_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_V_I_SMI_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_V_NMI_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_V_NMI_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_V_PADCFG_OFFSET },
    .PadsNum           = sizeof (MtlSocMCommunity0Group1Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlSocMCommunity0Group1Pads,
    .PadDwSize         = PAD_DW_SIZE
  },
  {
    .Name              = "GPP_C",
    .GpioPadGroup      = GPIOV2_MTL_SOC_M_GROUP_C,
    .GroupToGpeMapping = { V_MTL_SOC_M_PMC_PWRM_GPIO_CFG_GPP_C, V_GPIO_VER6_SOC_M_GPIO_PCR_MISCCFG_GPE0_GPP_C },
    .RegisterOffsets   = { R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_C_PAD_OWN,   R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_C_PADCFGLOCK,   R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_C_PADCFGLOCKTX,   R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_C_HOSTSW_OWN,   R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_C_GPI_IS,   R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_C_GPI_IE,   R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_C_GPI_GPE_STS,   R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_C_GPI_GPE_EN,   R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_C_I_SMI_STS,   R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_C_I_SMI_EN,   R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_C_NMI_STS,   R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_C_NMI_EN,   R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_C_PADCFG_OFFSET },
    .PadsNum           = sizeof (MtlSocMCommunity0Group2Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlSocMCommunity0Group2Pads,
    .PadDwSize         = PAD_DW_SIZE
  }
};

GPIOV2_PAD MtlSocMCommunity1Group0Pads[] = {
  GPIOV2_MTL_SOC_M_GPP_A0,
  GPIOV2_MTL_SOC_M_GPP_A1,
  GPIOV2_MTL_SOC_M_GPP_A2,
  GPIOV2_MTL_SOC_M_GPP_A3,
  GPIOV2_MTL_SOC_M_GPP_A4,
  GPIOV2_MTL_SOC_M_GPP_A5,
  GPIOV2_MTL_SOC_M_GPP_A6,
  GPIOV2_MTL_SOC_M_GPP_A7,
  GPIOV2_MTL_SOC_M_GPP_A8,
  GPIOV2_MTL_SOC_M_GPP_A9,
  GPIOV2_MTL_SOC_M_GPP_A10,
  GPIOV2_MTL_SOC_M_GPP_A11,
  GPIOV2_MTL_SOC_M_GPP_A12,
  GPIOV2_MTL_SOC_M_GPP_A13,
  GPIOV2_MTL_SOC_M_GPP_A14,
  GPIOV2_MTL_SOC_M_GPP_A15,
  GPIOV2_MTL_SOC_M_GPP_A16,
  GPIOV2_MTL_SOC_M_GPP_A17,
  GPIOV2_MTL_SOC_M_GPP_A18,
  GPIOV2_MTL_SOC_M_GPP_A19,
  GPIOV2_MTL_SOC_M_GPP_A20,
  GPIOV2_MTL_SOC_M_GPP_A21,
  GPIOV2_MTL_SOC_M_GPP_A22,
  GPIOV2_MTL_SOC_M_GPP_A23
};

GPIOV2_PAD MtlSocMCommunity1Group1Pads[] = {
  GPIOV2_MTL_SOC_M_GPP_E0,
  GPIOV2_MTL_SOC_M_GPP_E1,
  GPIOV2_MTL_SOC_M_GPP_E2,
  GPIOV2_MTL_SOC_M_GPP_E3,
  GPIOV2_MTL_SOC_M_GPP_E4,
  GPIOV2_MTL_SOC_M_GPP_E5,
  GPIOV2_MTL_SOC_M_GPP_E6,
  GPIOV2_MTL_SOC_M_GPP_E7,
  GPIOV2_MTL_SOC_M_GPP_E8,
  GPIOV2_MTL_SOC_M_GPP_E9,
  GPIOV2_MTL_SOC_M_GPP_E10,
  GPIOV2_MTL_SOC_M_GPP_E11,
  GPIOV2_MTL_SOC_M_GPP_E12,
  GPIOV2_MTL_SOC_M_GPP_E13,
  GPIOV2_MTL_SOC_M_GPP_E14,
  GPIOV2_MTL_SOC_M_GPP_E15,
  GPIOV2_MTL_SOC_M_GPP_E16,
  GPIOV2_MTL_SOC_M_GPP_E17,
  GPIOV2_MTL_SOC_M_GPP_E18,
  GPIOV2_MTL_SOC_M_GPP_E19,
  GPIOV2_MTL_SOC_M_GPP_E20,
  GPIOV2_MTL_SOC_M_GPP_E21,
  GPIOV2_MTL_SOC_M_GPP_E22,
  GPIOV2_MTL_SOC_M_GPP_E23
};

//
// Mtl Soc M Com 1
//
GPIOV2_GROUP MtlSocMCommunity1Groups[] = {
  {
    .Name              = "GPP_A",
    .GpioPadGroup      = GPIOV2_MTL_SOC_M_GROUP_A,
    .GroupToGpeMapping = { V_MTL_SOC_M_PMC_PWRM_GPIO_CFG_GPP_A, V_GPIO_VER6_SOC_M_GPIO_PCR_MISCCFG_GPE0_GPP_A },
    .RegisterOffsets   = { R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_A_PAD_OWN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_A_PADCFGLOCK, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_A_PADCFGLOCKTX, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_A_HOSTSW_OWN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_A_GPI_IS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_A_GPI_IE, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_A_GPI_GPE_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_A_GPI_GPE_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_A_SMI_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_A_SMI_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_A_NMI_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_A_NMI_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_A_PADCFG_OFFSET },
    .PadsNum           = sizeof (MtlSocMCommunity1Group0Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlSocMCommunity1Group0Pads,
    .PadDwSize         = PAD_DW_SIZE
  },
  {
    .Name              = "GPP_E",
    .GpioPadGroup      = GPIOV2_MTL_SOC_M_GROUP_E,
    .GroupToGpeMapping = { V_MTL_SOC_M_PMC_PWRM_GPIO_CFG_GPP_E, V_GPIO_VER6_SOC_M_GPIO_PCR_MISCCFG_GPE0_GPP_E },
    .RegisterOffsets   = { R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_E_PAD_OWN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_E_PADCFGLOCK, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_E_PADCFGLOCKTX, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_E_HOSTSW_OWN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_E_GPI_IS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_E_GPI_IE, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_E_GPI_GPE_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_E_GPI_GPE_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_E_SMI_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_E_SMI_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_E_NMI_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_E_NMI_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_E_PADCFG_OFFSET },
    .PadsNum           = sizeof (MtlSocMCommunity1Group1Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlSocMCommunity1Group1Pads,
    .PadDwSize         = PAD_DW_SIZE
  }
};

//
// Mtl Soc M Com 2
//

//
// Mtl Soc M Com 3
//
GPIOV2_PAD MtlSocMCommunity3Group0Pads[] = {
  GPIOV2_MTL_SOC_M_GPP_H0,
  GPIOV2_MTL_SOC_M_GPP_H1,
  GPIOV2_MTL_SOC_M_GPP_H2,
  GPIOV2_MTL_SOC_M_GPP_H3,
  GPIOV2_MTL_SOC_M_GPP_H4,
  GPIOV2_MTL_SOC_M_GPP_H5,
  GPIOV2_MTL_SOC_M_GPP_H6,
  GPIOV2_MTL_SOC_M_GPP_H7,
  GPIOV2_MTL_SOC_M_GPP_H8,
  GPIOV2_MTL_SOC_M_GPP_H9,
  GPIOV2_MTL_SOC_M_GPP_H10,
  GPIOV2_MTL_SOC_M_GPP_H11,
  GPIOV2_MTL_SOC_M_GPP_H12,
  GPIOV2_MTL_SOC_M_GPP_H13,
  GPIOV2_MTL_SOC_M_GPP_H14,
  GPIOV2_MTL_SOC_M_GPP_H15,
  GPIOV2_MTL_SOC_M_GPP_H16,
  GPIOV2_MTL_SOC_M_GPP_H17,
  GPIOV2_MTL_SOC_M_GPP_H18,
  GPIOV2_MTL_SOC_M_GPP_H19,
  GPIOV2_MTL_SOC_M_GPP_H20,
  GPIOV2_MTL_SOC_M_GPP_H21,
  GPIOV2_MTL_SOC_M_GPP_H22
};

GPIOV2_PAD MtlSocMCommunity3Group1Pads[] = {
  GPIOV2_MTL_SOC_M_GPP_F0,
  GPIOV2_MTL_SOC_M_GPP_F1,
  GPIOV2_MTL_SOC_M_GPP_F2,
  GPIOV2_MTL_SOC_M_GPP_F3,
  GPIOV2_MTL_SOC_M_GPP_F4,
  GPIOV2_MTL_SOC_M_GPP_F5,
  GPIOV2_MTL_SOC_M_GPP_F6,
  GPIOV2_MTL_SOC_M_GPP_F7,
  GPIOV2_MTL_SOC_M_GPP_F8,
  GPIOV2_MTL_SOC_M_GPP_F9,
  GPIOV2_MTL_SOC_M_GPP_F10,
  GPIOV2_MTL_SOC_M_GPP_F11,
  GPIOV2_MTL_SOC_M_GPP_F12,
  GPIOV2_MTL_SOC_M_GPP_F13,
  GPIOV2_MTL_SOC_M_GPP_F14,
  GPIOV2_MTL_SOC_M_GPP_F15,
  GPIOV2_MTL_SOC_M_GPP_F16,
  GPIOV2_MTL_SOC_M_GPP_F17,
  GPIOV2_MTL_SOC_M_GPP_F18,
  GPIOV2_MTL_SOC_M_GPP_F19,
  GPIOV2_MTL_SOC_M_GPP_F20,
  GPIOV2_MTL_SOC_M_GPP_F21,
  GPIOV2_MTL_SOC_M_GPP_F22,
  GPIOV2_MTL_SOC_M_GPP_F23
};

GPIOV2_GROUP MtlSocMCommunity3Groups[] = {
  {
    .Name              = "GPP_H",
    .GpioPadGroup      = GPIOV2_MTL_SOC_M_GROUP_H,
    .GroupToGpeMapping = { V_MTL_SOC_M_PMC_PWRM_GPIO_CFG_GPP_H, V_GPIO_VER6_SOC_M_GPIO_PCR_MISCCFG_GPE0_GPP_H },
    .RegisterOffsets   = { R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_H_PAD_OWN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_H_PADCFGLOCK, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_H_PADCFGLOCKTX, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_H_HOSTSW_OWN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_H_GPI_IS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_H_GPI_IE, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_H_GPI_GPE_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_H_GPI_GPE_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_H_SMI_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_H_SMI_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_H_NMI_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_H_NMI_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_H_PADCFG_OFFSET },
    .PadsNum           = sizeof (MtlSocMCommunity3Group0Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlSocMCommunity3Group0Pads,
    .PadDwSize         = PAD_DW_SIZE
  },
  {
    .Name              = "GPP_F",
    .GpioPadGroup      = GPIOV2_MTL_SOC_M_GROUP_F,
    .GroupToGpeMapping = { V_MTL_SOC_M_PMC_PWRM_GPIO_CFG_GPP_F, V_GPIO_VER6_SOC_M_GPIO_PCR_MISCCFG_GPE0_GPP_F },
    .RegisterOffsets   = { R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_F_PAD_OWN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_F_PADCFGLOCK, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_F_PADCFGLOCKTX, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_F_HOSTSW_OWN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_F_GPI_IS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_F_GPI_IE, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_F_GPI_GPE_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_F_GPI_GPE_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_F_SMI_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_F_SMI_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_F_NMI_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_F_NMI_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_F_PADCFG_OFFSET },
    .PadsNum           = sizeof (MtlSocMCommunity3Group1Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlSocMCommunity3Group1Pads,
    .PadDwSize         = PAD_DW_SIZE
  }
};

//
// Mtl Soc M Com 4
//
GPIOV2_PAD MtlSocMCommunity4Group0Pads[] = {
  GPIOV2_MTL_SOC_M_GPP_S0,
  GPIOV2_MTL_SOC_M_GPP_S1,
  GPIOV2_MTL_SOC_M_GPP_S2,
  GPIOV2_MTL_SOC_M_GPP_S3,
  GPIOV2_MTL_SOC_M_GPP_S4,
  GPIOV2_MTL_SOC_M_GPP_S5,
  GPIOV2_MTL_SOC_M_GPP_S6,
  GPIOV2_MTL_SOC_M_GPP_S7
};


GPIOV2_GROUP MtlSocMCommunity4Groups[] = {
  {
    .Name              = "GPP_S",
    .GpioPadGroup      = GPIOV2_MTL_SOC_M_GROUP_S,
    .GroupToGpeMapping = { V_MTL_SOC_M_PMC_PWRM_GPIO_CFG_GPP_S, V_GPIO_VER6_SOC_M_GPIO_PCR_MISCCFG_GPE0_GPP_S },
    .RegisterOffsets   = { R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_S_PAD_OWN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_S_PADCFGLOCK, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_S_PADCFGLOCKTX, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_S_HOSTSW_OWN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_S_GPI_IS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_S_GPI_IE, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_S_GPI_GPE_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_S_GPI_GPE_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_S_SMI_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_S_SMI_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_S_NMI_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_S_NMI_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_S_PADCFG_OFFSET },
    .PadsNum           = sizeof (MtlSocMCommunity4Group0Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlSocMCommunity4Group0Pads,
    .PadDwSize         = PAD_DW_SIZE
  }
};

//
// Mtl Soc M Com 5
//
GPIOV2_PAD MtlSocMCommunity5Group0Pads[] = {
  GPIOV2_MTL_SOC_M_GPP_B0,
  GPIOV2_MTL_SOC_M_GPP_B1,
  GPIOV2_MTL_SOC_M_GPP_B2,
  GPIOV2_MTL_SOC_M_GPP_B3,
  GPIOV2_MTL_SOC_M_GPP_B4,
  GPIOV2_MTL_SOC_M_GPP_B5,
  GPIOV2_MTL_SOC_M_GPP_B6,
  GPIOV2_MTL_SOC_M_GPP_B7,
  GPIOV2_MTL_SOC_M_GPP_B8,
  GPIOV2_MTL_SOC_M_GPP_B9,
  GPIOV2_MTL_SOC_M_GPP_B10,
  GPIOV2_MTL_SOC_M_GPP_B11,
  GPIOV2_MTL_SOC_M_GPP_B12,
  GPIOV2_MTL_SOC_M_GPP_B13,
  GPIOV2_MTL_SOC_M_GPP_B14,
  GPIOV2_MTL_SOC_M_GPP_B15,
  GPIOV2_MTL_SOC_M_GPP_B16,
  GPIOV2_MTL_SOC_M_GPP_B17,
  GPIOV2_MTL_SOC_M_GPP_B18,
  GPIOV2_MTL_SOC_M_GPP_B19,
  GPIOV2_MTL_SOC_M_GPP_B20,
  GPIOV2_MTL_SOC_M_GPP_B21,
  GPIOV2_MTL_SOC_M_GPP_B22,
  GPIOV2_MTL_SOC_M_GPP_B23
};

GPIOV2_PAD MtlSocMCommunity5Group1Pads[] = {
  GPIOV2_MTL_SOC_M_GPP_D0,
  GPIOV2_MTL_SOC_M_GPP_D1,
  GPIOV2_MTL_SOC_M_GPP_D2,
  GPIOV2_MTL_SOC_M_GPP_D3,
  GPIOV2_MTL_SOC_M_GPP_D4,
  GPIOV2_MTL_SOC_M_GPP_D5,
  GPIOV2_MTL_SOC_M_GPP_D6,
  GPIOV2_MTL_SOC_M_GPP_D7,
  GPIOV2_MTL_SOC_M_GPP_D8,
  GPIOV2_MTL_SOC_M_GPP_D9,
  GPIOV2_MTL_SOC_M_GPP_D10,
  GPIOV2_MTL_SOC_M_GPP_D11,
  GPIOV2_MTL_SOC_M_GPP_D12,
  GPIOV2_MTL_SOC_M_GPP_D13,
  GPIOV2_MTL_SOC_M_GPP_D14,
  GPIOV2_MTL_SOC_M_GPP_D15,
  GPIOV2_MTL_SOC_M_GPP_D16,
  GPIOV2_MTL_SOC_M_GPP_D17,
  GPIOV2_MTL_SOC_M_GPP_D18,
  GPIOV2_MTL_SOC_M_GPP_D19,
  GPIOV2_MTL_SOC_M_GPP_D20,
  GPIOV2_MTL_SOC_M_GPP_D21,
  GPIOV2_MTL_SOC_M_GPP_D22,
  GPIOV2_MTL_SOC_M_GPP_D23
};


GPIOV2_GROUP MtlSocMCommunity5Groups[] = {
  {
    .Name              = "GPP_B",
    .GpioPadGroup      = GPIOV2_MTL_SOC_M_GROUP_B,
    .GroupToGpeMapping = { V_MTL_SOC_M_PMC_PWRM_GPIO_CFG_GPP_B, V_GPIO_VER6_SOC_M_GPIO_PCR_MISCCFG_GPE0_GPP_B },
    .RegisterOffsets   = { R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_B_PAD_OWN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_B_PADCFGLOCK, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_B_PADCFGLOCKTX, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_B_HOSTSW_OWN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_B_GPI_IS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_B_GPI_IE, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_B_GPI_GPE_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_B_GPI_GPE_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_B_SMI_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_B_SMI_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_B_NMI_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_B_NMI_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_B_PADCFG_OFFSET },
    .PadsNum           = sizeof (MtlSocMCommunity5Group0Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlSocMCommunity5Group0Pads,
    .PadDwSize         = PAD_DW_SIZE
  },
  {
    .Name              = "GPP_D",
    .GpioPadGroup      = GPIOV2_MTL_SOC_M_GROUP_D,
    .GroupToGpeMapping = { V_MTL_SOC_M_PMC_PWRM_GPIO_CFG_GPP_D, V_GPIO_VER6_SOC_M_GPIO_PCR_MISCCFG_GPE0_GPP_D },
    .RegisterOffsets   = { R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_D_PAD_OWN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_D_PADCFGLOCK, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_D_PADCFGLOCKTX, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_D_HOSTSW_OWN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_D_GPI_IS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_D_GPI_IE, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_D_GPI_GPE_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_D_GPI_GPE_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_D_SMI_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_D_SMI_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_D_NMI_STS, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_D_NMI_EN, R_GPIO_VER6_SOC_M_GPIO_PCR_GPP_D_PADCFG_OFFSET },
    .PadsNum           = sizeof (MtlSocMCommunity5Group1Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlSocMCommunity5Group1Pads,
    .PadDwSize         = PAD_DW_SIZE
  }
};

GPIOV2_COMMUNITY MtlSocMCommunities[] = {
  {
    // COM 0
    .GroupsNum = sizeof (MtlSocMCommunity0Groups) / sizeof (GPIOV2_GROUP),
    .Groups    = MtlSocMCommunity0Groups,
    .Pid       = 0xD1
  },
  {
    // COM 1
    .GroupsNum = sizeof (MtlSocMCommunity1Groups) / sizeof (GPIOV2_GROUP),
    .Groups    = MtlSocMCommunity1Groups,
    .Pid       = 0xD2
  },
  {
    // COM 3
    .GroupsNum = sizeof (MtlSocMCommunity3Groups) / sizeof (GPIOV2_GROUP),
    .Groups    = MtlSocMCommunity3Groups,
    .Pid       = 0xD4
  },
  {
    // COM 4
    .GroupsNum = sizeof (MtlSocMCommunity4Groups) / sizeof (GPIOV2_GROUP),
    .Groups    = MtlSocMCommunity4Groups,
    .Pid       = 0xD5
  },
  {
    // COM 5
    .GroupsNum = sizeof (MtlSocMCommunity5Groups) / sizeof (GPIOV2_GROUP),
    .Groups    = MtlSocMCommunity5Groups,
    .Pid       = 0xD6
  }
};
//*********************************************************************
//                    MTL-SOC-M Pins End                              *
//*********************************************************************

//*********************************************************************
//                    MTL-SOC-S Pins Start                            *
//*********************************************************************

GPIOV2_PAD MtlSocSCommunity0Group0Pads[] = {
  GPIOV2_MTL_SOC_S_GPP_A0,
  GPIOV2_MTL_SOC_S_GPP_A1,
  GPIOV2_MTL_SOC_S_GPP_A2,
  GPIOV2_MTL_SOC_S_GPP_A3,
  GPIOV2_MTL_SOC_S_GPP_A4,
  GPIOV2_MTL_SOC_S_GPP_A5,
  GPIOV2_MTL_SOC_S_GPP_A6,
  GPIOV2_MTL_SOC_S_GPP_A7,
  GPIOV2_MTL_SOC_S_GPP_A8,
  GPIOV2_MTL_SOC_S_GPP_A9,
  GPIOV2_MTL_SOC_S_GPP_A10,
  GPIOV2_MTL_SOC_S_GPP_A11,
  GPIOV2_MTL_SOC_S_GPP_A12,
  GPIOV2_MTL_SOC_S_GPP_A13,
  GPIOV2_MTL_SOC_S_GPP_A14,
  GPIOV2_MTL_SOC_S_GPP_A15,
  GPIOV2_MTL_SOC_S_GPP_A16,
  GPIOV2_MTL_SOC_S_GPP_A17,
  GPIOV2_MTL_SOC_S_GPP_A18,
  GPIOV2_MTL_SOC_S_GPP_A19,
  GPIOV2_MTL_SOC_S_GPP_A20,
  GPIOV2_MTL_SOC_S_GPP_A21,
  GPIOV2_MTL_SOC_S_GPP_A22,
  GPIOV2_MTL_SOC_S_GPP_A23
};



// Mtl Soc S Com 0
GPIOV2_GROUP MtlSocSCommunity0Groups[] = {
  {  /* Group GPP A */
    .Name              = "GPP_A",
    .GpioPadGroup      = GPIOV2_MTL_SOC_S_GROUP_A,
    .GroupToGpeMapping = { V_MTL_SOC_S_PMC_PWRM_GPIO_CFG_GPP_A, V_GPIO_VER6_SOC_S_GPIO_PCR_MISCCFG_GPE0_GPP_A },
    .RegisterOffsets   = { R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_A_PAD_OWN, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_A_PADCFGLOCK, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_A_PADCFGLOCKTX, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_A_HOSTSW_OWN, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_A_GPI_IS, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_A_GPI_IE, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_A_GPI_GPE_STS, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_A_GPI_GPE_EN, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_A_SMI_STS, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_A_SMI_EN, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_A_NMI_STS, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_A_NMI_EN, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_A_PADCFG_OFFSET },
    .PadsNum           = sizeof(MtlSocSCommunity0Group0Pads) / sizeof(GPIOV2_PAD),
    .Pads              = MtlSocSCommunity0Group0Pads,
    .PadDwSize         = PAD_DW_SIZE
  }
};

GPIOV2_PAD MtlSocSCommunity1Group0Pads[] = {
  GPIOV2_MTL_SOC_S_GPP_B0,
  GPIOV2_MTL_SOC_S_GPP_B1,
  GPIOV2_MTL_SOC_S_GPP_B2,
  GPIOV2_MTL_SOC_S_GPP_B3,
  GPIOV2_MTL_SOC_S_GPP_B4,
  GPIOV2_MTL_SOC_S_GPP_B5,
  GPIOV2_MTL_SOC_S_GPP_B6,
  GPIOV2_MTL_SOC_S_GPP_B7,
  GPIOV2_MTL_SOC_S_GPP_B8,
  GPIOV2_MTL_SOC_S_GPP_B9,
  GPIOV2_MTL_SOC_S_GPP_B10,
  GPIOV2_MTL_SOC_S_GPP_B11,
  GPIOV2_MTL_SOC_S_GPP_B12,
  GPIOV2_MTL_SOC_S_GPP_B13,
  GPIOV2_MTL_SOC_S_GPP_B14,
  GPIOV2_MTL_SOC_S_GPP_B15,
  GPIOV2_MTL_SOC_S_GPP_B16,
  GPIOV2_MTL_SOC_S_GPP_B17,
  GPIOV2_MTL_SOC_S_GPP_B18,
  GPIOV2_MTL_SOC_S_GPP_B19
};


GPIOV2_PAD MtlSocSCommunity1Group2Pads[] = {
  GPIOV2_MTL_SOC_S_GPP_D0,
  GPIOV2_MTL_SOC_S_GPP_D1,
  GPIOV2_MTL_SOC_S_GPP_D2,
  GPIOV2_MTL_SOC_S_GPP_D3,
  GPIOV2_MTL_SOC_S_GPP_D4,
  GPIOV2_MTL_SOC_S_GPP_D5,
  GPIOV2_MTL_SOC_S_GPP_D6,
  GPIOV2_MTL_SOC_S_GPP_D7,
  GPIOV2_MTL_SOC_S_GPP_D8,
  GPIOV2_MTL_SOC_S_GPP_D9,
  GPIOV2_MTL_SOC_S_GPP_D10,
  GPIOV2_MTL_SOC_S_GPP_D11,
  GPIOV2_MTL_SOC_S_GPP_D12,
  GPIOV2_MTL_SOC_S_GPP_D13,
  GPIOV2_MTL_SOC_S_GPP_D14,
  GPIOV2_MTL_SOC_S_GPP_D15,
  GPIOV2_MTL_SOC_S_GPP_D16,
  GPIOV2_MTL_SOC_S_GPP_D17,
  GPIOV2_MTL_SOC_S_GPP_D18,
  GPIOV2_MTL_SOC_S_GPP_D19,
  GPIOV2_MTL_SOC_S_GPP_D20,
  GPIOV2_MTL_SOC_S_GPP_D21,
  GPIOV2_MTL_SOC_S_GPP_D22,
  GPIOV2_MTL_SOC_S_GPP_D23
};
//
// Mtl Soc S Com 1
//
GPIOV2_GROUP MtlSocSCommunity1Groups[] = {
  {
    .Name              = "GPP_B",
    .GpioPadGroup      = GPIOV2_MTL_SOC_S_GROUP_B,
    .GroupToGpeMapping = { V_MTL_SOC_S_PMC_PWRM_GPIO_CFG_GPP_B, V_GPIO_VER6_SOC_S_GPIO_PCR_MISCCFG_GPE0_GPP_B },
    .RegisterOffsets   = { R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_B_PAD_OWN, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_B_PADCFGLOCK, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_B_PADCFGLOCKTX, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_B_HOSTSW_OWN, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_B_GPI_IS, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_B_GPI_IE, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_B_GPI_GPE_STS, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_B_GPI_GPE_EN, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_B_SMI_STS, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_B_SMI_EN, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_B_NMI_STS, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_B_NMI_EN, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_B_PADCFG_OFFSET },
    .PadsNum           = sizeof (MtlSocSCommunity1Group0Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlSocSCommunity1Group0Pads,
    .PadDwSize         = PAD_DW_SIZE
  },
  {
    .Name              = "GPP_D",
    .GpioPadGroup      = GPIOV2_MTL_SOC_S_GROUP_D,
    .GroupToGpeMapping = { V_MTL_SOC_S_PMC_PWRM_GPIO_CFG_GPP_D, V_GPIO_VER6_SOC_S_GPIO_PCR_MISCCFG_GPE0_GPP_D },
    .RegisterOffsets   = { R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_D_PAD_OWN, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_D_PADCFGLOCK, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_D_PADCFGLOCKTX, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_D_HOSTSW_OWN, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_D_GPI_IS, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_D_GPI_IE, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_D_GPI_GPE_STS, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_D_GPI_GPE_EN, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_D_SMI_STS, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_D_SMI_EN, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_D_NMI_STS, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_D_NMI_EN, R_GPIO_VER6_SOC_S_GPIO_PCR_GPP_D_PADCFG_OFFSET },
    .PadsNum           = sizeof (MtlSocSCommunity1Group2Pads) / sizeof (GPIOV2_PAD),
    .Pads              = MtlSocSCommunity1Group2Pads,
    .PadDwSize         = PAD_DW_SIZE
  }
};


GPIOV2_COMMUNITY MtlSocSCommunities[] = {
  {
    // COM 0
    .GroupsNum       = sizeof (MtlSocSCommunity0Groups) / sizeof (GPIOV2_GROUP),
    .Groups          = MtlSocSCommunity0Groups,
    .Pid             = 0xD1,
  },
  {
    // COM 1
    .GroupsNum       = sizeof (MtlSocSCommunity1Groups) / sizeof (GPIOV2_GROUP),
    .Groups          = MtlSocSCommunity1Groups,
    .Pid             = 0xD2,
  }
};

