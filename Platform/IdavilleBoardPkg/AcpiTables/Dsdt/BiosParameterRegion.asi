/** @file

  Copyright (c) 2020, Intel Corporation. All rights reserved.<BR>
  SPDX-License-Identifier: BSD-2-Clause-Patent

**/

  //
  // BIOS parameter BIOS_ACPI_PARAM
  //
  Name (BNVB, 0xFFFF0000)  // BIOS_ACPI_PARAM Base address
  Name (BNVL, 0xAA55)      // BIOS_ACPI_PARAM Length
  OperationRegion (PSYS, SystemMemory, BNVB, BNVL)
  Field (PSYS, ByteAcc, NoLock, Preserve) {
    // IOAPIC Start
    PLAT   ,  32,   // Platform ID

    Offset (0x04),  //
    APCE   ,   1,   // PCH IOAPIC Enable
    AP00   ,   1,   // PC00 IOAPIC Enable S0
    AP01   ,   1,   // PC01 IOAPIC Enable
    AP02   ,   1,   // PC02 IOAPIC Enable
    AP03   ,   1,   // PC03 IOAPIC Enable
    AP04   ,   1,   // PC04 IOAPIC Enable
    AP05   ,   1,   // PC05 IOAPIC Enable
    AP06   ,   1,   // PC06 IOAPIC Enable S1
    AP07   ,   1,   // PC07 IOAPIC Enable
    AP08   ,   1,   // PC08 IOAPIC Enable
    AP09   ,   1,   // PC09 IOAPIC Enable
    AP10   ,   1,   // PC10 IOAPIC Enable
    AP11   ,   1,   // PC11 IOAPIC Enable
    AP12   ,   1,   // PC12 IOAPIC Enable S2
    AP13   ,   1,   // PC13 IOAPIC Enable
    AP14   ,   1,   // PC14 IOAPIC Enable
    AP15   ,   1,   // PC15 IOAPIC Enable
    AP16   ,   1,   // PC16 IOAPIC Enable
    AP17   ,   1,   // PC17 IOAPIC Enable
    AP18   ,   1,   // PC18 IOAPIC Enable S3
    AP19   ,   1,   // PC19 IOAPIC Enable
    AP20   ,   1,   // PC20 IOAPIC Enable
    AP21   ,   1,   // PC21 IOAPIC Enable
    AP22   ,   1,   // PC22 IOAPIC Enable
    AP23   ,   1,   // PC23 IOAPIC Enable
    AP24   ,   1,   // PC24 IOAPIC Enable S4
    AP25   ,   1,   // PC25 IOAPIC Enable
    AP26   ,   1,   // PC26 IOAPIC Enable
    AP27   ,   1,   // PC27 IOAPIC Enable
    AP28   ,   1,   // PC28 IOAPIC Enable
    AP29   ,   1,   // PC29 IOAPIC Enable
    AP30   ,   1,   // PC30 IOAPIC Enable S5
    AP31   ,   1,   // PC31 IOAPIC Enable
    AP32   ,   1,   // PC32 IOAPIC Enable
    AP33   ,   1,   // PC33 IOAPIC Enable
    AP34   ,   1,   // PC34 IOAPIC Enable
    AP35   ,   1,   // PC35 IOAPIC Enable
    AP36   ,   1,   // PC36 IOAPIC Enable S6
    AP37   ,   1,   // PC37 IOAPIC Enable
    AP38   ,   1,   // PC38 IOAPIC Enable
    AP39   ,   1,   // PC39 IOAPIC Enable
    AP40   ,   1,   // PC40 IOAPIC Enable
    AP41   ,   1,   // PC41 IOAPIC Enable
    AP42   ,   1,   // PC42 IOAPIC Enable S7
    AP43   ,   1,   // PC43 IOAPIC Enable
    AP44   ,   1,   // PC44 IOAPIC Enable
    AP45   ,   1,   // PC45 IOAPIC Enable
    AP46   ,   1,   // PC46 IOAPIC Enable
    AP47   ,   1,   // PC47 IOAPIC Enable
    RESA   ,  15,

    Offset (0x0C),
    SKOV   ,   1,   // Override ApicId socket field
    P119   ,   1,   // PCH IOAPIC 24_119 enabled
    CPX4   ,   1,   // 1 = CPX4, 0 = CPX6
    RES0   ,   5,   // Unused
    // IOAPIC End

    // Power Managment Start
    Offset (0x0D),
    TPME   ,  1,    // TPM Enable
    CSEN   ,  1,    // C State Enable
    C3EN   ,  1,    // OS C3 Report Enbale
    C6EN   ,  1,    // C6 Enable
    C7EN   ,  1,    // C7 Enable
    MWOS   ,  1,    // MWAIT support Enable
    PSEN   ,  1,    // P State Enable
    EMCA   ,  1,    // EMCA Enable
    Offset (0x0E),
    HWAL   ,  2,    // PSD HW_ALL Enable
    KPRS   ,  1,    // KB present Flag
    MPRS   ,  1,    // Mouse present Flag
    TSEN   ,  1,    // T State Enable Flag
    FGTS   ,  1,    // Fine grained T state Flag
    OSCX   ,  1,    // OS C States
    RESX   ,  1,    // Unused
    // Power Management End

    // RAS Start
    Offset (0x0F),
    CPHP   ,  8,    // Bit field for determining CPU hotplug event is happening, Update every time CPU Hotpug event is registered as valid
                    // Bit0 CPU0 O*L Request
                    // Bit1 CPU1 O*L Request
                    // Bit2 CPU2 O*L Request
                    // Bit3 CPU3 O*L Request
                    // Bit4 CPU4 O*L Request
                    // Bit5 CPU5 O*L Request
                    // Bit6 CPU6 O*L Request
                    // Bit7 CPU7 O*L Request
    IIOP   ,  8,    // Bit field for determining IIO hotplug event is happening, Update every time IIO Hotpug event is registered as valid
                    // Bit0 IIO1 O*L Request
                    // Bit1 IIO2 O*L Request
                    // Bit2 IIO3 O*L Request
                    // Bit3-7 Reserved
    SPB0   , 16,    // Stack Present Bitmask in socket0, what stacks are present for STA method (Patched by ACPI Platform Driver during POST)
    SPB1   , 16,    // Stack Present Bitmask in socket1, what stacks are present for STA method (Patched by ACPI Platform Driver during POST)
    SPB2   , 16,    // Stack Present Bitmask in socket2, what stacks are present for STA method (Patched by ACPI Platform Driver during POST)
    SPB3   , 16,    // Stack Present Bitmask in socket3, what stacks are present for STA method (Patched by ACPI Platform Driver during POST)
    SPB4   , 16,    // Stack Present Bitmask in socket4, what stacks are present for STA method (Patched by ACPI Platform Driver during POST)
    SPB5   , 16,    // Stack Present Bitmask in socket5, what stacks are present for STA method (Patched by ACPI Platform Driver during POST)
    SPB6   , 16,    // Stack Present Bitmask in socket6, what stacks are present for STA method (Patched by ACPI Platform Driver during POST)
    SPB7   , 16,    // Stack Present Bitmask in socket7, what stacks are present for STA method (Patched by ACPI Platform Driver during POST)
    PRBM   , 32,    // Processor Bit mask, what sockets are present for STA method, Update every time hotplug event happen and at boot time (Patched by ACPI Platform Driver during POST)
    CTHC   , 8,     // CPU Core Thread Count
    P0ID   , 32,    // Processor 0 APIC ID base
    P1ID   , 32,    // Processor 1 APIC ID base
    P2ID   , 32,    // Processor 2 APIC ID base
    P3ID   , 32,    // Processor 3 APIC ID base
    P4ID   , 32,    // Processor 4 APIC ID base
    P5ID   , 32,    // Processor 5 APIC ID base
    P6ID   , 32,    // Processor 6 APIC ID base
    P7ID   , 32,    // Processor 7 APIC ID base
    P0BM   , 64,    // Processor 0 Bit mask, what cores (0-63) are present for STA method
    P1BM   , 64,    // Processor 1 Bit mask, what cores (0-63) are present for STA method
    P2BM   , 64,    // Processor 2 Bit mask, what cores (0-63) are present for STA method
    P3BM   , 64,    // Processor 3 Bit mask, what cores (0-63) are present for STA method
    P4BM   , 64,    // Processor 4 Bit mask, what cores (0-63) are present for STA method
    P5BM   , 64,    // Processor 5 Bit mask, what cores (0-63) are present for STA method
    P6BM   , 64,    // Processor 6 Bit mask, what cores (0-63) are present for STA method
    P7BM   , 64,    // Processor 7 Bit mask, what cores (0-63) are present for STA method
    P0BH   , 64,    // Processor 0 Bit mask, what cores (64-127) are present for STA method
    P1BH   , 64,    // Processor 1 Bit mask, what cores (64-127) are present for STA method
    P2BH   , 64,    // Processor 2 Bit mask, what cores (64-127) are present for STA method
    P3BH   , 64,    // Processor 3 Bit mask, what cores (64-127) are present for STA method
    P4BH   , 64,    // Processor 4 Bit mask, what cores (64-127) are present for STA method
    P5BH   , 64,    // Processor 5 Bit mask, what cores (64-127) are present for STA method
    P6BH   , 64,    // Processor 6 Bit mask, what cores (64-127) are present for STA method
    P7BH   , 64,    // Processor 7 Bit mask, what cores (64-127) are present for STA method
    CFMM   , 32,    // MMCFG Base
    TSSZ   , 32,    // TSEG Size.
    SMI0   , 32,    // Parameter0 used for faked SMI request
    SMI1   , 32,    // Parameter1 used for faked SMI request
    SMI2   , 32,    // Parameter2 used for faked SMI request
    SMI3   , 32,    // Parameter3 used for faked SMI request
    SCI0   , 32,    // Parameter0 used for faked SCI request
    SCI1   , 32,    // Parameter1 used for faked SCI request
    SCI2   , 32,    // Parameter2 used for faked SCI request
    SCI3   , 32,    // Parameter3 used for faked SCI request
    MADD   , 64,    // Migration ActionRegion GAS address. (Migration support written for 8 CPU socket system. In a 4 socket system, CPU4-7 and MEM8-15 are invalid.)
    CUU0   , 128,   // CPU0 UUID
    CUU1   , 128,   // CPU1 UUID
    CUU2   , 128,   // CPU2 UUID
    CUU3   , 128,   // CPU3 UUID
    CUU4   , 128,   // CPU4 UUID
    CUU5   , 128,   // CPU5 UUID
    CUU6   , 128,   // CPU6 UUID
    CUU7   , 128,   // CPU7 UUID
    CPSP   , 8,     // CPU spare bitmap. 1 == IsSpare.
    ME00   , 128,   // MEM0 UUID
    ME01   , 128,   // MEM1 UUID
    ME10   , 128,   // MEM2 UUID
    ME11   , 128,   // MEM3 UUID
    ME20   , 128,   // MEM4 UUID
    ME21   , 128,   // MEM5 UUID
    ME30   , 128,   // MEM6 UUID
    ME31   , 128,   // MEM7 UUID
    ME40   , 128,   // MEM8 UUID
    ME41   , 128,   // MEM9 UUID
    ME50   , 128,   // MEM10 UUID
    ME51   , 128,   // MEM11 UUID
    ME60   , 128,   // MEM12 UUID
    ME61   , 128,   // MEM13 UUID
    ME70   , 128,   // MEM14 UUID
    ME71   , 128,   // MEM15 UUID
    LDIR   , 64,    // L1 Directory Address
    PRID   , 32,    // Processor ID
    AHPE   , 8,     // ACPI PCIe hot plug enable.
    WHEN   , 8,
    WSCI   , 8,
    SERR   , 8,     // Propogate SERR
    PERR   , 8,     // Propogate PERR
    // RAS End

    // VTD Start
    DHRD   , 192,   // DHRD
    ATSR   , 192,   // ATSR
    RHSA   , 192,   // RHSA
    // VTD End

    // SR-IOV WA Start
    WSIC   , 8,
    WSIS   , 16,
    WSIB   , 8,
    WSID   , 8,
    WSIF   , 8,
    WSTS   , 8,
    WHEA   , 8,
    // SR-IOV WA End

    // BIOS Guard Start
    BGMA   , 64,    // BIOS Guard Memory Address
    BGMS   , 8,     // BIOS Guard Memory Size
    BGIO   , 16,    // BIOS Guard IO Trap Address
    CNBS   , 8,     // CPU SKU number bit shift
    // BIOS Guard End

    // USB3 Start
    XHMD   , 8,     // copy of setup item PchUsb30Mode
    SBV1   , 8,     // USB Sideband Deferring GPE Vector (HOST_ALERT#1)
    SBV2   , 8,     // USB Sideband Deferring GPE Vector (HOST_ALERT#2)
    // USB3 End

    // HWPM Start
    HWEN   ,  2,    // HWPM State Enable option from setup
    RES2   ,  1,    // Reserved bit
    HWPI   ,  1,    // HWP Interrupt
    RES1   ,  4,    // Reserved bits
    // HWPM End

    // SGX Start
    EPCS   ,  8,    // EPC Status
    ELN0   , 64,    // EPC0 Length
    ELN1   , 64,    // EPC1 Length
    ELN2   , 64,    // EPC2 Length
    ELN3   , 64,    // EPC3 Length
    ELN4   , 64,    // EPC4 Length
    ELN5   , 64,    // EPC5 Length
    ELN6   , 64,    // EPC6 Length
    ELN7   , 64,    // EPC7 Length
    EBA0   , 64,    // EPC0 Base Address
    EBA1   , 64,    // EPC1 Base Address
    EBA2   , 64,    // EPC2 Base Address
    EBA3   , 64,    // EPC3 Base Address
    EBA4   , 64,    // EPC4 Base Address
    EBA5   , 64,    // EPC5 Base Address
    EBA6   , 64,    // EPC6 Base Address
    EBA7   , 64,    // EPC7 Base Address
    // SGX End

    // PCIe Multi-Seg Start
    // Stack bus base numbers for up to 14 stacks in up to 8 socket. Name is 'BB<skt><stk>', where <skt> and <stk> are hex.
    BB00, 8, BB01, 8, BB02, 8, BB03, 8, BB04, 8, BB05, 8, BB06, 8, BB07, 8, BB08, 8, BB09, 8, BB0A, 8, BB0B, 8, BB0C, 8, BB0D, 8,
    BB10, 8, BB11, 8, BB12, 8, BB13, 8, BB14, 8, BB15, 8, BB16, 8, BB17, 8, BB18, 8, BB19, 8, BB1A, 8, BB1B, 8, BB1C, 8, BB1D, 8,
    BB20, 8, BB21, 8, BB22, 8, BB23, 8, BB24, 8, BB25, 8, BB26, 8, BB27, 8, BB28, 8, BB29, 8, BB2A, 8, BB2B, 8, BB2C, 8, BB2D, 8,
    BB30, 8, BB31, 8, BB32, 8, BB33, 8, BB34, 8, BB35, 8, BB36, 8, BB37, 8, BB38, 8, BB39, 8, BB3A, 8, BB3B, 8, BB3C, 8, BB3D, 8,
    BB40, 8, BB41, 8, BB42, 8, BB43, 8, BB44, 8, BB45, 8, BB46, 8, BB47, 8, BB48, 8, BB49, 8, BB4A, 8, BB4B, 8, BB4C, 8, BB4D, 8,
    BB50, 8, BB51, 8, BB52, 8, BB53, 8, BB54, 8, BB55, 8, BB56, 8, BB57, 8, BB58, 8, BB59, 8, BB5A, 8, BB5B, 8, BB5C, 8, BB5D, 8,
    BB60, 8, BB61, 8, BB62, 8, BB63, 8, BB64, 8, BB65, 8, BB66, 8, BB67, 8, BB68, 8, BB69, 8, BB6A, 8, BB6B, 8, BB6C, 8, BB6D, 8,
    BB70, 8, BB71, 8, BB72, 8, BB73, 8, BB74, 8, BB75, 8, BB76, 8, BB77, 8, BB78, 8, BB79, 8, BB7A, 8, BB7B, 8, BB7C, 8, BB7D, 8,

    SGEN   , 8,     // PCIe_MultiSeg_Support enable/disable
    SG00   , 8,     // PCI segment ID for socket 0
    SG01   , 8,     // PCI segment ID for socket 1
    SG02   , 8,     // PCI segment ID for socket 2
    SG03   , 8,     // PCI segment ID for socket 3
    SG04   , 8,     // PCI segment ID for socket 4
    SG05   , 8,     // PCI segment ID for socket 5
    SG06   , 8,     // PCI segment ID for socket 6
    SG07   , 8,     // PCI segment ID for socket 7
    // PCIe Multi-Seg End

    // Sub-NUMA Cluster support
    CLOD   , 8,     //  0 - SNC disabled, 2 - SNC enabled with 2 clusters, 4 - SNC enabled with 4 clusters

    // XTU Start
    XTUB   , 32,
    XTUS   , 32,
    XMBA   , 32,
    DDRF   , 8,
    RT3S   , 8,
    RTP0   , 8,
    RTP3   , 8,
    // XTU End

    // FPGA Root Port Bus
    FBB0   , 8,     // FPGA Bus Base for Socket 0
    FBB1   , 8,     // FPGA Bus Base for Socket 1
    FBB2   , 8,     // FPGA Bus Base for Socket 2
    FBB3   , 8,     // FPGA Bus Base for Socket 3
    FBB4   , 8,     // FPGA Bus Base for Socket 4
    FBB5   , 8,     // FPGA Bus Base for Socket 5
    FBB6   , 8,     // FPGA Bus Base for Socket 6
    FBB7   , 8,     // FPGA Bus Base for Socket 7

    FBL0   , 8,     // FPGA Bus limit for Socket 0
    FBL1   , 8,     // FPGA Bus limit for Socket 1
    FBL2   , 8,     // FPGA Bus limit for Socket 2
    FBL3   , 8,     // FPGA Bus limit for Socket 3
    FBL4   , 8,     // FPGA Bus limit for Socket 4
    FBL5   , 8,     // FPGA Bus limit for Socket 5
    FBL6   , 8,     // FPGA Bus limit for Socket 6
    FBL7   , 8,     // FPGA Bus limit for Socket 7

    // FPGA present bit
    P0FB   , 8,     // FPGA present in Socket 0
    P1FB   , 8,     // FPGA present in Socket 1
    P2FB   , 8,     // FPGA present in Socket 2
    P3FB   , 8,     // FPGA present in Socket 3
    P4FB   , 8,     // FPGA present in Socket 4
    P5FB   , 8,     // FPGA present in Socket 5
    P6FB   , 8,     // FPGA present in Socket 6
    P7FB   , 8,     // FPGA present in Socket 7

    // FPGA Resource Allocation
    FMB0   , 32,
    FMB1   , 32,
    FMB2   , 32,
    FMB3   , 32,
    FMB4   , 32,
    FMB5   , 32,
    FMB6   , 32,
    FMB7   , 32,

    FML0   , 32,
    FML1   , 32,
    FML2   , 32,
    FML3   , 32,
    FML4   , 32,
    FML5   , 32,
    FML6   , 32,
    FML7   , 32,

    // FPGA KTI present bitmap
    FKPB   , 32,
    // FPGA Bus for KTI
    FKB0   , 8,     // FPGA Bus Base for Socket 0 KTI Link
    FKB1   , 8,     // FPGA Bus Base for Socket 1 KTI Link
    FKB2   , 8,     // FPGA Bus Base for Socket 2 KTI Link
    FKB3   , 8,     // FPGA Bus Base for Socket 3 KTI Link
    FKB4   , 8,     // FPGA Bus Base for Socket 4 KTI Link
    FKB5   , 8,     // FPGA Bus Base for Socket 5 KTI Link
    FKB6   , 8,     // FPGA Bus Base for Socket 6 KTI Link
    FKB7   , 8,     // FPGA Bus Base for Socket 7 KTI Link

    PMBA   , 16,    // ACPI IO Base Address
    DBGM   , 8,     // Debug Mode Indicator
    IRPC   , 8,     // IIO PCIe root port PCIe Capability offset
    ATSC   , 8,     // Flag to indicate if TSC is linked to ART

    // IIO Bus Limit (for Socket 0)
    BL00, 16, BL01, 16, BL02, 16, BL03, 16, BL04, 16, BL05, 16,

    // IIO MMIO resources (32-bit & 64-bit) (Base & Length) (for Socket 0)
    I03B, 32, I13B, 32, I23B, 32, I33B, 32, I43B, 32, I53B, 32,
    I03L, 32, I13L, 32, I23L, 32, I33L, 32, I43L, 32, I53L, 32,
    I06B, 64, I16B, 64, I26B, 64, I36B, 64, I46B, 64, I56B, 64,
    I06L, 64, I16L, 64, I26L, 64, I36L, 64, I46L, 64, I56L, 64,

    // IIO IO resources (16-bit) (Base & Length) (for Socket 0)
    I0IB, 16, I1IB, 16, I2IB, 16, I3IB, 16, I4IB, 16, I5IB, 16,
    I0IL, 16, I1IL, 16, I2IL, 16, I3IL, 16, I4IL, 16, I5IL, 16,

    // Uncore Bus resources (Base & Limit)
    UC6B, 8,  UC7B, 8,
    UC6L, 8,  UC7L, 8,

  }

