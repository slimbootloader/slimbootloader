/** @file

  Copyright (c) 2020, Intel Corporation. All rights reserved.<BR>
  SPDX-License-Identifier: BSD-2-Clause-Patent

**/

Device (EPC) {
  Name (_HID, EISAID ("INT0E0C"))
  Name (_STR, Unicode ("Enclave Page Cache 1.0"))
  Name (_MLS, Package () {Package (2) { "en", Unicode ("Enclave Page Cache 1.0")}})

  Name (RBUF, ResourceTemplate () {
    QWordMemory (
      ResourceConsumer,    // ResourceUsage
      PosDecode,           // Decode               _DEC
      MinNotFixed,         // IsMinFixed           _MIF
      MaxNotFixed,         // IsMaxFixed           _MAF
      NonCacheable,        // Cacheable            _MEM
      ReadWrite,           // ReadAndWrite         _RW
      0,                   // AddressGranularity   _GRA
      0,                   // AddressMinimum       _MIN  <= To be patched in Runtime
      0,                   // AddressMaximum       _MAX  <= To be patched in Runtime
      0,                   // AddressTranslation   _TRA
      0,                   // RangeLength          _LEN  <= To be patched in Runtime
      ,                    // ResourceSourceIndex
      ,                    // ResourceSource
      EPC0                 // DescriptorName
      )
    QWordMemory (
      ResourceConsumer,    // ResourceUsage
      PosDecode,           // Decode               _DEC
      MinNotFixed,         // IsMinFixed           _MIF
      MaxNotFixed,         // IsMaxFixed           _MAF
      NonCacheable,        // Cacheable            _MEM
      ReadWrite,           // ReadAndWrite         _RW
      0,                   // AddressGranularity   _GRA
      0,                   // AddressMinimum       _MIN  <= To be patched in Runtime
      0,                   // AddressMaximum       _MAX  <= To be patched in Runtime
      0,                   // AddressTranslation   _TRA
      0,                   // RangeLength          _LEN  <= To be patched in Runtime
      ,                    // ResourceSourceIndex
      ,                    // ResourceSource
      EPC1                 // DescriptorName
      )
    QWordMemory (
      ResourceConsumer,    // ResourceUsage
      PosDecode,           // Decode               _DEC
      MinNotFixed,         // IsMinFixed           _MIF
      MaxNotFixed,         // IsMaxFixed           _MAF
      NonCacheable,        // Cacheable            _MEM
      ReadWrite,           // ReadAndWrite         _RW
      0,                   // AddressGranularity   _GRA
      0,                   // AddressMinimum       _MIN  <= To be patched in Runtime
      0,                   // AddressMaximum       _MAX  <= To be patched in Runtime
      0,                   // AddressTranslation   _TRA
      0,                   // RangeLength          _LEN  <= To be patched in Runtime
      ,                    // ResourceSourceIndex
      ,                    // ResourceSource
      EPC2                 // DescriptorName
      )
    QWordMemory (
      ResourceConsumer,    // ResourceUsage
      PosDecode,           // Decode               _DEC
      MinNotFixed,         // IsMinFixed           _MIF
      MaxNotFixed,         // IsMaxFixed           _MAF
      NonCacheable,        // Cacheable            _MEM
      ReadWrite,           // ReadAndWrite         _RW
      0,                   // AddressGranularity   _GRA
      0,                   // AddressMinimum       _MIN  <= To be patched in Runtime
      0,                   // AddressMaximum       _MAX  <= To be patched in Runtime
      0,                   // AddressTranslation   _TRA
      0,                   // RangeLength          _LEN  <= To be patched in Runtime
      ,                    // ResourceSourceIndex
      ,                    // ResourceSource
      EPC3                 // DescriptorName
      )
    QWordMemory (
      ResourceConsumer,    // ResourceUsage
      PosDecode,           // Decode               _DEC
      MinNotFixed,         // IsMinFixed           _MIF
      MaxNotFixed,         // IsMaxFixed           _MAF
      NonCacheable,        // Cacheable            _MEM
      ReadWrite,           // ReadAndWrite         _RW
      0,                   // AddressGranularity   _GRA
      0,                   // AddressMinimum       _MIN  <= To be patched in Runtime
      0,                   // AddressMaximum       _MAX  <= To be patched in Runtime
      0,                   // AddressTranslation   _TRA
      0,                   // RangeLength          _LEN  <= To be patched in Runtime
      ,                    // ResourceSourceIndex
      ,                    // ResourceSource
      EPC4                 // DescriptorName
      )
    QWordMemory (
      ResourceConsumer,    // ResourceUsage
      PosDecode,           // Decode               _DEC
      MinNotFixed,         // IsMinFixed           _MIF
      MaxNotFixed,         // IsMaxFixed           _MAF
      NonCacheable,        // Cacheable            _MEM
      ReadWrite,           // ReadAndWrite         _RW
      0,                   // AddressGranularity   _GRA
      0,                   // AddressMinimum       _MIN  <= To be patched in Runtime
      0,                   // AddressMaximum       _MAX  <= To be patched in Runtime
      0,                   // AddressTranslation   _TRA
      0,                   // RangeLength          _LEN  <= To be patched in Runtime
      ,                    // ResourceSourceIndex
      ,                    // ResourceSource
      EPC5                 // DescriptorName
      )
    QWordMemory (
      ResourceConsumer,    // ResourceUsage
      PosDecode,           // Decode               _DEC
      MinNotFixed,         // IsMinFixed           _MIF
      MaxNotFixed,         // IsMaxFixed           _MAF
      NonCacheable,        // Cacheable            _MEM
      ReadWrite,           // ReadAndWrite         _RW
      0,                   // AddressGranularity   _GRA
      0,                   // AddressMinimum       _MIN  <= To be patched in Runtime
      0,                   // AddressMaximum       _MAX  <= To be patched in Runtime
      0,                   // AddressTranslation   _TRA
      0,                   // RangeLength          _LEN  <= To be patched in Runtime
      ,                    // ResourceSourceIndex
      ,                    // ResourceSource
      EPC6                 // DescriptorName
      )
    QWordMemory (
      ResourceConsumer,    // ResourceUsage
      PosDecode,           // Decode               _DEC
      MinNotFixed,         // IsMinFixed           _MIF
      MaxNotFixed,         // IsMaxFixed           _MAF
      NonCacheable,        // Cacheable            _MEM
      ReadWrite,           // ReadAndWrite         _RW
      0,                   // AddressGranularity   _GRA
      0,                   // AddressMinimum       _MIN  <= To be patched in Runtime
      0,                   // AddressMaximum       _MAX  <= To be patched in Runtime
      0,                   // AddressTranslation   _TRA
      0,                   // RangeLength          _LEN  <= To be patched in Runtime
      ,                    // ResourceSourceIndex
      ,                    // ResourceSource
      EPC7                 // DescriptorName
      )
    })

  Method (_CRS, 0x0, NotSerialized) {
    If (LNotEqual (EBA0, 0)) {
      CreateQwordField (RBUF, ^EPC0._MIN, MIN0)
      CreateQwordField (RBUF, ^EPC0._MAX, MAX0)
      CreateQwordField (RBUF, ^EPC0._LEN, LEN0)
      Store (EBA0, MIN0)
      Store (ELN0, LEN0)
      Subtract (Add (EBA0, ELN0), 1, MAX0)
    }
    If (LNotEqual (EBA1, 0)) {
      CreateQwordField (RBUF, ^EPC1._MIN, MIN1)
      CreateQwordField (RBUF, ^EPC1._MAX, MAX1)
      CreateQwordField (RBUF, ^EPC1._LEN, LEN1)
      Store (EBA1, MIN1)
      Store (ELN1, LEN1)
      Subtract (Add (EBA1, ELN1), 1, MAX1)
    }
    If (LNotEqual (EBA2, 0)) {
      CreateQwordField (RBUF, ^EPC2._MIN, MIN2)
      CreateQwordField (RBUF, ^EPC2._MAX, MAX2)
      CreateQwordField (RBUF, ^EPC2._LEN, LEN2)
      Store (EBA2, MIN2)
      Store (ELN2, LEN2)
      Subtract (Add (EBA2, ELN2), 1, MAX2)
    }
    If (LNotEqual (EBA3, 0)) {
      CreateQwordField (RBUF, ^EPC3._MIN, MIN3)
      CreateQwordField (RBUF, ^EPC3._MAX, MAX3)
      CreateQwordField (RBUF, ^EPC3._LEN, LEN3)
      Store (EBA3, MIN3)
      Store (ELN3, LEN3)
      Subtract (Add (EBA3, ELN3), 1, MAX3)
    }
    If (LNotEqual (EBA4, 0)) {
      CreateQwordField (RBUF, ^EPC4._MIN, MIN4)
      CreateQwordField (RBUF, ^EPC4._MAX, MAX4)
      CreateQwordField (RBUF, ^EPC4._LEN, LEN4)
      Store (EBA4, MIN4)
      Store (ELN4, LEN4)
      Subtract (Add (EBA4, ELN4), 1, MAX4)
    }
    If (LNotEqual (EBA5, 0)) {
      CreateQwordField (RBUF, ^EPC5._MIN, MIN5)
      CreateQwordField (RBUF, ^EPC5._MAX, MAX5)
      CreateQwordField (RBUF, ^EPC5._LEN, LEN5)
      Store (EBA5, MIN5)
      Store (ELN5, LEN5)
      Subtract (Add (EBA5, ELN5), 1, MAX5)
    }
    If (LNotEqual (EBA6, 0)) {
      CreateQwordField (RBUF, ^EPC6._MIN, MIN6)
      CreateQwordField (RBUF, ^EPC6._MAX, MAX6)
      CreateQwordField (RBUF, ^EPC6._LEN, LEN6)
      Store (EBA6, MIN6)
      Store (ELN6, LEN6)
      Subtract (Add (EBA6, ELN6), 1, MAX6)
    }
    If (LNotEqual (EBA7, 0)) {
      CreateQwordField (RBUF, ^EPC7._MIN, MIN7)
      CreateQwordField (RBUF, ^EPC7._MAX, MAX7)
      CreateQwordField (RBUF, ^EPC7._LEN, LEN7)
      Store (EBA7, MIN7)
      Store (ELN7, LEN7)
      Subtract (Add (EBA7, ELN7), 1, MAX7)
    }
    Return (RBUF)
  }

  Method (_STA, 0x0, NotSerialized) {
    If (LNotEqual (EPCS, 0)) {
      Return (0xF)
    }
    Return (0x0)
  }
} // end EPC Device
