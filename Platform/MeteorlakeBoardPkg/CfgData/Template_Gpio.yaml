## @file
#
#  Slim Bootloader CFGDATA Template File.
#
#  Copyright (c) 2020 - 2024, Intel Corporation. All rights reserved.<BR>
#  SPDX-License-Identifier: BSD-2-Clause-Patent
#
##


GPIO_TMPL: >
  - $ACTION      :
      page         : GIO_$(1)$(2):GIO_$(1):"$(1)$(2)"
  - GpioPinConfig0_$(1)$(2) :
    - $STRUCT      :
        name         : GPIO $(1)$(2) PIN Config0
        type         : EditNum, HEX, (0x00000000,0xFFFFFFFF)
        help         : >
                       GPIO $(1)$(2) PIN Configuration
        length       : 0x04
        value        : $(3)
    - GPIOPADMode_$(1)$(2) :
        name         : PadMode
        type         : Combo
        option       : >
                       0x0:Hardware Default, 0x1:GPIO control of the pad, 0x3:Native function 1, 0x5:Native function 2, 0x7:Native function 3,
                       0x9:Native function 4, 0xB:Native function 5, 0xD:Native function 6
        help         : >
                       GPIO PAD Mode. If GPIO is set to one of NativeX modes then following settings are not applicable and can be skipped:-
                       Interrupt related settings, Host Software Ownership, Output/Input enabling/disabling, Output lock
        condition    : $GPIO_CFG_DATA.GpioPinConfig1_$(1)$(2).GPIOSkip_$(1)$(2) == 0
        length       : 5b
    - GPIOHostSoftPadOwn_$(1)$(2) :
        name         : HostSoftPadOwn
        type         : Combo
        option       : 0x0:Host Ownership Default(Leave ownership value unmodified), 0x1:Host ownership to ACPI, 0x3:Host ownership to GPIO Driver mode
        help         : >
                       GPIO Host Software Pad Ownership. This setting affects GPIO interrupt status registers. Depending on chosen ownership
                       some GPIO Interrupt status register get updated and other masked:-
                       - HOST ownership to ACPI - Use this setting if pad is not going to be used by GPIO OS driver.
                       If GPIO is configured to generate SCI/SMI/NMI then this setting must be used for interrupts to work.
                       - HOST ownership to GPIO Driver mode - Use this setting only if GPIO pad should be controlled by GPIO OS Driver.
                       GPIO OS Driver will be able to control the pad if appropriate entry in ACPI exists.
        condition    : $GPIO_CFG_DATA.GpioPinConfig1_$(1)$(2).GPIOSkip_$(1)$(2) == 0
        length       : 2b
    - GPIODirection_$(1)$(2) :
        name         : Direction
        type         : Combo
        option       : 0x0:DirDefault, 0x3:DirInOut, 0x5:DirInInvOut, 0x7:DirIn, 0x9:DirInInv, 0xb:DirOut, 0xd:DirNone
        help         : >
                       GPIO Host Software Pad Ownership:
                       - DirDefault = Leave pad direction setting unmodified, - DirInOut = Set pad for both output and input,
                       - DirInInvOut = Set pad for both output and input with inversion, - DirIn = Set pad for input only,
                       - DirInInv = Set pad for input with inversion, - DirOut = Set pad for output only,
                       - DirNone  = Disable both output and input.
        condition    : $GPIO_CFG_DATA.GpioPinConfig1_$(1)$(2).GPIOSkip_$(1)$(2) == 0
        length       : 6b
    - GPIOOutputState_$(1)$(2) :
        name         : OutputState
        type         : Combo
        option       : 0x0:OutDefault, 0x1:OutLow, 0x3:OutHigh
        help         : >
                       GPIO Output State.This field is relevant only if output is enabled:-
                       - OutDefault = Leave output value unmodified, - OutLow = Set output to low, - OutHigh = Set output to high
        condition    : $GPIO_CFG_DATA.GpioPinConfig1_$(1)$(2).GPIOSkip_$(1)$(2) == 0
        length       : 2b
    - GPIOInterruptConfig_$(1)$(2) :
        name         : InterruptConfig
        type         : Combo
        option       : >
                       0x0:IntDefault , 0x1:IntDisable, 0x3:IntNmi , 0x5:IntSmi, 0x9:IntSci, 0x11:IntApic, 0x21:IntLevel, 0x41:IntEdge, 0x81:IntLvlEdgDis, 0x101:IntBothEdge,
                       0x31:IntLevel | IntApic, 0x29:IntLevel | IntSci, 0x25:IntLevel | IntSmi, 0x49:IntEdge | IntSci, 0x51:IntEdge | IntApic, 0x45:IntEdge | IntSmi, 0x41:IntEdge | IntDefault,
                       0x81:IntLvlEdgDis | IntDisable, 0x21:IntLevel | IntDisable, 0x11F:IntBothEdge | IntNmi | IntSmi | IntSci | IntApic
        help         : >
                       GPIO Interrupt Configuration - This setting is applicable only if pad is in GPIO mode and has input enabled.
                       GPIO_INT_CONFIG allows to choose which interrupt is generated (IOxAPIC/SCI/SMI/NMI) and how it is triggered (edge or level).
                       Refer to PADCFG_DW0 register description in EDS for details on this settings. Field from GpioIntNmi to GpioIntApic can be OR'ed with
                       GpioIntLevel to GpioIntBothEdge to describe an interrupt e.g. GpioIntApic | GpioIntLevel.
                       If GPIO is set to cause an SCI then also GPI_GPE_EN is enabled for this pad.
                       If GPIO is set to cause an NMI then also GPI_NMI_EN is enabled for this pad.
                       Not all GPIO are capable of generating an SMI or NMI interrupt.
                       When routing GPIO to cause an IOxAPIC interrupt care must be taken, as this interrupt cannot be shared and its IRQn number is not configurable.
                       If GPIO is under GPIO OS driver control and appropriate ACPI GpioInt descriptor exist then use only trigger type setting (from GpioIntLevel to GpioIntBothEdge).
                       This type of GPIO Driver interrupt doesn't have any additional routing setting required to be set by BIOS. Interrupt is handled by GPIO OS Driver.
                       - IntDefault = Leave value of interrupt routing unmodified, - IntDisable = Disable IOxAPIC/SCI/SMI/NMI interrupt generation,
                       - IntNmi = Enable NMI interrupt only, - IntSmi = Enable SMI interrupt only, - IntSci = Enable SCI interrupt only, - IntApic = Enable IOxAPIC interrupt only,
                       - IntLevel = Set interrupt as level triggered, - IntEdge = Set interrupt as edge triggered, - IntLvlEdgDis = Disable interrupt trigger, - IntBothEdge = Set interrupt as both edge triggered
        condition    : $GPIO_CFG_DATA.GpioPinConfig1_$(1)$(2).GPIOSkip_$(1)$(2) == 0
        length       : 9b
    - GPIOResetConfig_$(1)$(2) :
        name         : Power/ResetConfig
        type         : Combo
        option       : 0x0:ResetDefault, 0x1:ResetResume, 0x3:HostDeepReset, 0x5:PlatformReset, 0x7:DswReset
        help         : >
                       GPIO Power Configuration. This allows to set GPIO Reset type which will be used to reset certain GPIO settings.
                       - ResetDefault = Leave value of pad reset unmodified, - ResumeReset = Pad setting will reset on DeepSx transition and G3,
                       - HostDeepReset = Pad settings will reset on:Warm/Cold/Global reset,DeepSx transition,G3,
                       - PlatformReset = Pad settings will reset on:S3/S4/S5 transition, Warm/Cold/Global reset, DeepSx transition, G3
                       - DswReset = Pad settings will reset on G3
        condition    : $GPIO_CFG_DATA.GpioPinConfig1_$(1)$(2).GPIOSkip_$(1)$(2) == 0
        length       : 8b
  - GpioPinConfig1_$(1)$(2) :
    - $STRUCT      :
        name         : GPIO $(1)$(2) PIN Config1
        type         : EditNum, HEX, (0x00000000,0xFFFFFFFF)
        help         : >
                       GPIO $(1)$(2) PIN Configuration
        length       : 0x04
        value        : $(4)
    - GPIOTerminationCfg_$(1)$(2) :
        name         : GPIO TerminationCfg
        type         : Combo
        option       : 0x0:TermDefault, 0x1:TermNone, 0x5:TermWpd5K, 0x9:TermWpd20K, 0x13:TermWpu1K, 0x17:TermWpu2K, 0x15:TermWpu5K, 0x19:TermWpu20K, 0x1B:TermWpu1K2K, 0x1F:TermNative
        help         : >
                       GPIO Termination Configuration. Set GPIO termination.(applicable only for some pads):-
                       - TermDefault = Leave termination setting unmodified, - TermNone = None, - TermWpd5K = 5kOhm weak pull-down, - TermWpd20K = 20kOhm weak pull-down,
                       - TermWpu1K = 1kOhm weak pull-up, - TermWpu2K = 2kOhm weak pull-up, - TermWpu5K = 5kOhm weak pull-up, - TermWpu20K = 20kOhm weak pull-up, - TermWpu1K2K = 1kOhm & 2kOhm weak pull-up,
                       - TermNative = Native function. This setting is applicable only to some native modes,
        condition    : $GPIO_CFG_DATA.GpioPinConfig1_$(1)$(2).GPIOSkip_$(1)$(2) == 0
        length       : 6b
    - GPIOLockConfig_$(1)$(2) :
        name         : LockConfig
        type         : Combo
        option       : 0x0:LockDefault, 0x1:PadConfigUnlock, 0x3:PadConfigLock
        help         : >
                       GPIO Lock Configuration.
                       - LockDefault = Leave value of pad as-is,  PadConfigUnlock = Leave Pad configuration unlocked
                       - PadConfigLock = Lock Pad configuration
        condition    : $GPIO_CFG_DATA.GpioPinConfig1_$(1)$(2).GPIOSkip_$(1)$(2) == 0
        length       : 2b
    - GPIOLockTx_$(1)$(2) :
        name         : LockTx
        type         : Combo
        option       : 0x0:LockDefault, 0x1:GPIOTxStateConfigUnlock, 0x3:GPIOTxStateConfiglock
        help         : >
                       GPIO TxState Lock Configuration.
                       - LockDefault = Leave value of pad as-is,  PadConfigUnlock = Leave GPIO TxState configuration unlocked
                       - PadConfigLock = Lock GPIO TxState configuration
        condition    : $GPIO_CFG_DATA.GpioPinConfig1_$(1)$(2).GPIOSkip_$(1)$(2) == 0
        length       : 2b

    - Reserved1_$(1)$(2) :
        name         : Reserved1
        type         : Reserved
        length       : 6b




    - PadIdx_$(1)$(2)  :
        name         : PadIdx
        type         : EditNum, HEX, (0x0,0x1F)
        condition    : $GPIO_CFG_DATA.GpioPinConfig1_$(1)$(2).GPIOSkip_$(1)$(2) == 0
        length       : 5b
    - GrpIdx_$(1)  :
        name         : GrpIdx
        type         : Reserved
        length       : 3b


    - ComIdx_$(1)$(2)  :
        name         : ComIdx
        type         : Reserved
        length       : 3b
    - ChipId_$(1)  :
        name         : Chipset ID
        type         : Reserved
        length       : 3b
    - Hide_$(1)$(2)    :
        name         : Hide
        type         : Reserved
        length       : 1b
    - GPIOSkip_$(1)$(2) :
        name         : GPIO Skip
        type         : Combo
        option       : $EN_DIS
        help         : >
                       ENABLE- Skip GPIO PAD programming (keep the defaults). DISABLE- Program GPIO PAD configuration.
        order        : 0000.0000
        condition    : $GPIO_CFG_DATA.GpioPinConfig1_$(1)$(2).Hide_$(1)$(2) == 0
        length       : 1b


