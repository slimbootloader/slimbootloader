/** @file
  Structure definition for the ACPI BDAT Table

  Copyright (c) 2018, Intel Corporation. All rights reserved.<BR>
  This program and the accompanying materials
  are licensed and made available under the terms and conditions of the BSD License
  which accompanies this distribution.  The full text of the license may be found at
  http://opensource.org/licenses/bsd-license.php.

  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.

**/

//
// Statements that include other files
//
#include <IndustryStandard/Acpi50.h>
#include "AcpiTablePlatform.h"
#include <Library/FirmwareUpdateLib.h>

// BDAT Table Template
EFI_FWST_ACPI_DESCRIPTION_TABLE FwstTable = {
  {
    EFI_FIRMWARE_UPDATE_STATUS_TABLE_SIGNATURE, // Signature
    sizeof(EFI_FWST_ACPI_DESCRIPTION_TABLE),    // Length
    0x1,                                        // 1 byte for Revision
    0x0,                                        // to make sum of entire table == 0
    { CREATOR_INTEL_OEM_ID },                   // OEMID is a 6 bytes long field
    CREATOR_INTEL_OEM_TABLE_ID,                 // OEM table identification(8 bytes long)
    ACPI_FWST_OEM_REV,                          // OEM revision
    CREATOR_ID_INTEL,                           // ASL compiler vendor ID
    CREATOR_REV_INTEL,                          // ASL compiler revision number
  },
  {
    MAX_FW_COMPONENTS,
    MAX_FW_COMPONENTS,
    EFI_SYSTEM_RESOURCE_TABLE_FIRMWARE_RESOURCE_VERSION,
  },
  {{
    { 0, 0, 0, { 0, 0, 0, 0, 0, 0, 0, 0 } },
    0,
    0,
    0,
    0,
    0,
    0,
  },
  {
    { 0, 0, 0, { 0, 0, 0, 0, 0, 0, 0, 0 } },
    0,
    0,
    0,
    0,
    0,
    0,
  },
  {
    { 0, 0, 0, { 0, 0, 0, 0, 0, 0, 0, 0 } },
    0,
    0,
    0,
    0,
    0,
    0,
  },},
};

VOID*
ReferenceAcpiTable (
  VOID
  )
{
  //
  // Reference the table being generated to prevent the optimizer from
  // removing the data structure from the executable
  //
  return (VOID*)&FwstTable;
}


